

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Dec 03 00:27:20 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  0006AE                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _hello
    46  0006AE  48                 	db	72
    47  0006AF  65                 	db	101
    48  0006B0  6C                 	db	108
    49  0006B1  6C                 	db	108
    50  0006B2  6F                 	db	111
    51  0006B3  2C                 	db	44
    52  0006B4  20                 	db	32
    53  0006B5  77                 	db	119
    54  0006B6  6F                 	db	111
    55  0006B7  72                 	db	114
    56  0006B8  6C                 	db	108
    57  0006B9  64                 	db	100
    58  0006BA  21                 	db	33
    59  0006BB  20                 	db	32
    60  0006BC  3C                 	db	60
    61  0006BD  50                 	db	80
    62  0006BE  4C                 	db	76
    63  0006BF  3E                 	db	62
    64  0006C0  0A                 	db	10
    65  0006C1  0D                 	db	13
    66  0006C2  00                 	db	0
    67                           
    68                           	psect	idataBANK0
    69  000650                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _init
    73  000650  49                 	db	73
    74  000651  6E                 	db	110
    75  000652  69                 	db	105
    76  000653  74                 	db	116
    77  000654  69                 	db	105
    78  000655  61                 	db	97
    79  000656  6C                 	db	108
    80  000657  69                 	db	105
    81  000658  7A                 	db	122
    82  000659  65                 	db	101
    83  00065A  64                 	db	100
    84  00065B  20                 	db	32
    85  00065C  41                 	db	65
    86  00065D  63                 	db	99
    87  00065E  63                 	db	99
    88  00065F  65                 	db	101
    89  000660  6C                 	db	108
    90  000661  65                 	db	101
    91  000662  72                 	db	114
    92  000663  6F                 	db	111
    93  000664  6D                 	db	109
    94  000665  65                 	db	101
    95  000666  74                 	db	116
    96  000667  65                 	db	101
    97  000668  72                 	db	114
    98  000669  0A                 	db	10
    99  00066A  0D                 	db	13
   100  00066B  00                 	db	0
   101  0000                     _BAUDCON	set	4024
   102  0000                     _LATDbits	set	3980
   103  0000                     _PIE1	set	3997
   104  0000                     _PIE1bits	set	3997
   105  0000                     _PIR1bits	set	3998
   106  0000                     _PIR2bits	set	4001
   107  0000                     _RCSTA	set	4011
   108  0000                     _RCSTAbits	set	4011
   109  0000                     _SPBRG	set	4015
   110  0000                     _SPBRGH	set	4016
   111  0000                     _SSPADD	set	4040
   112  0000                     _SSPBUF	set	4041
   113  0000                     _SSPCON1	set	4038
   114  0000                     _SSPCON1bits	set	4038
   115  0000                     _SSPCON2	set	4037
   116  0000                     _SSPCON2bits	set	4037
   117  0000                     _SSPSTAT	set	4039
   118  0000                     _SSPSTATbits	set	4039
   119  0000                     _TRISBbits	set	3987
   120  0000                     _TRISC	set	3988
   121  0000                     _TRISCbits	set	3988
   122  0000                     _TRISD	set	3989
   123  0000                     _TXREG	set	4013
   124  0000                     _TXSTA	set	4012
   125  0000                     _TXSTAbits	set	4012
   126                           
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  0004FA                     __pcinit:
   131                           	opt stack 0
   132  0004FA                     start_initialization:
   133                           	opt stack 0
   134  0004FA                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Clear objects allocated to COMRAM (1 bytes)
   138  0004FA  6A40               	clrf	__pbssCOMRAM& (0+255),c
   139                           
   140                           ; Initialize objects allocated to BANK0 (28 bytes)
   141                           ; load TBLPTR registers with __pidataBANK0
   142  0004FC  0E50               	movlw	low __pidataBANK0
   143  0004FE  6EF6               	movwf	tblptrl,c
   144  000500  0E06               	movlw	high __pidataBANK0
   145  000502  6EF7               	movwf	tblptrh,c
   146  000504  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   147  000506  6EF8               	movwf	tblptru,c
   148  000508  EE00  F087         	lfsr	0,__pdataBANK0
   149  00050C  EE10 F01C          	lfsr	1,28
   150  000510                     copy_data0:
   151  000510  0009               	tblrd		*+
   152  000512  CFF5 FFEE          	movff	tablat,postinc0
   153  000516  50E5               	movf	postdec1,w,c
   154  000518  50E1               	movf	fsr1l,w,c
   155  00051A  E1FA               	bnz	copy_data0
   156                           
   157                           ; Initialize objects allocated to COMRAM (21 bytes)
   158                           ; load TBLPTR registers with __pidataCOMRAM
   159  00051C  0EAE               	movlw	low __pidataCOMRAM
   160  00051E  6EF6               	movwf	tblptrl,c
   161  000520  0E06               	movlw	high __pidataCOMRAM
   162  000522  6EF7               	movwf	tblptrh,c
   163  000524  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   164  000526  6EF8               	movwf	tblptru,c
   165  000528  EE00  F02B         	lfsr	0,__pdataCOMRAM
   166  00052C  EE10 F015          	lfsr	1,21
   167  000530                     copy_data1:
   168  000530  0009               	tblrd		*+
   169  000532  CFF5 FFEE          	movff	tablat,postinc0
   170  000536  50E5               	movf	postdec1,w,c
   171  000538  50E1               	movf	fsr1l,w,c
   172  00053A  E1FA               	bnz	copy_data1
   173  00053C                     end_of_initialization:
   174                           	opt stack 0
   175  00053C                     __end_of__initialization:
   176                           	opt stack 0
   177  00053C  0100               	movlb	0
   178  00053E  EFE1  F001         	goto	_main	;jump to C main() function
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           postinc0	equ	0xFEE
   184                           postdec1	equ	0xFE5
   185                           fsr1l	equ	0xFE1
   186                           
   187                           	psect	bssCOMRAM
   188  000040                     __pbssCOMRAM:
   189                           	opt stack 0
   190  000040                     _USART_Status:
   191                           	opt stack 0
   192  000040                     	ds	1
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           postdec1	equ	0xFE5
   199                           fsr1l	equ	0xFE1
   200                           
   201                           	psect	dataCOMRAM
   202  00002B                     __pdataCOMRAM:
   203                           	opt stack 0
   204  00002B                     _hello:
   205                           	opt stack 0
   206  00002B                     	ds	21
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           postdec1	equ	0xFE5
   213                           fsr1l	equ	0xFE1
   214                           
   215                           	psect	dataBANK0
   216  000087                     __pdataBANK0:
   217                           	opt stack 0
   218  000087                     _init:
   219                           	opt stack 0
   220  000087                     	ds	28
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	cstackBANK0
   230  000060                     __pcstackBANK0:
   231                           	opt stack 0
   232  000060                     utoa@buf:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x0
   236  000060                     	ds	2
   237  000062                     utoa@val:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x2
   241  000062                     	ds	2
   242  000064                     utoa@base:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  000064                     	ds	2
   247  000066                     itoa@buf:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x6
   251  000066                     	ds	2
   252  000068                     itoa@val:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x8
   256  000068                     	ds	2
   257  00006A                     itoa@base:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0xA
   261  00006A                     	ds	2
   262  00006C                     itoa@cp:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0xC
   266  00006C                     	ds	2
   267  00006E                     ??_Accel_Init:
   268                           
   269                           ; 0 bytes @ 0xE
   270  00006E                     	ds	2
   271  000070                     Accel_Init@out:
   272                           	opt stack 0
   273                           
   274                           ; 20 bytes @ 0x10
   275  000070                     	ds	20
   276  000084                     Accel_Init@fsr:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x24
   280  000084                     	ds	1
   281  000085                     main@i:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x25
   285  000085                     	ds	2
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	cstackCOMRAM
   295  000001                     __pcstackCOMRAM:
   296                           	opt stack 0
   297  000001                     ??_System_LowPriorityInterrupt:
   298  000001                     
   299                           ; 1 bytes @ 0x0
   300  000001                     	ds	17
   301  000012                     ??_System_HighPriorityInterrupt:
   302                           
   303                           ; 0 bytes @ 0x11
   304  000012                     	ds	14
   305  000020                     ??_IdleI2C:
   306  000020                     ?___lwdiv:
   307                           	opt stack 0
   308  000020                     ?___lwmod:
   309                           	opt stack 0
   310  000020                     baudUSART@baudconfig:
   311                           	opt stack 0
   312  000020                     WriteUSART@data:
   313                           	opt stack 0
   314  000020                     OpenI2C@slew:
   315                           	opt stack 0
   316  000020                     OpenUSART@spbrg:
   317                           	opt stack 0
   318  000020                     getsI2C@rdptr:
   319                           	opt stack 0
   320  000020                     ___lwdiv@dividend:
   321                           	opt stack 0
   322  000020                     ___lwmod@dividend:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x1F
   326  000020                     	ds	1
   327  000021                     OpenI2C@sync_mode:
   328                           	opt stack 0
   329  000021                     WriteI2C@data_out:
   330                           	opt stack 0
   331  000021                     putsUSART@data:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x20
   335  000021                     	ds	1
   336  000022                     Accel_WriteRegister@data:
   337                           	opt stack 0
   338  000022                     OpenUSART@config:
   339                           	opt stack 0
   340  000022                     getsI2C@length:
   341                           	opt stack 0
   342  000022                     ___lwdiv@divisor:
   343                           	opt stack 0
   344  000022                     ___lwmod@divisor:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x21
   348  000022                     	ds	1
   349  000023                     Accel_WriteRegister@reg:
   350                           	opt stack 0
   351  000023                     Accel_ReadRegisters@out:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x22
   355  000023                     	ds	1
   356  000024                     ___lwdiv@counter:
   357                           	opt stack 0
   358  000024                     ___lwmod@counter:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x23
   362  000024                     	ds	1
   363  000025                     Accel_ReadRegisters@length:
   364                           	opt stack 0
   365  000025                     ___lwdiv@quotient:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x24
   369  000025                     	ds	2
   370  000027                     Accel_ReadRegister@reg:
   371                           	opt stack 0
   372  000027                     utoa@v:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x26
   376  000027                     	ds	1
   377  000028                     Accel_ReadRegister@out:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x27
   381  000028                     	ds	1
   382  000029                     Accel_StandBy@c:
   383                           	opt stack 0
   384  000029                     Accel_Active@c:
   385                           	opt stack 0
   386  000029                     utoa@c:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x28
   390  000029                     	ds	1
   391  00002A                     ??_main:
   392                           
   393                           ; 0 bytes @ 0x29
   394  00002A                     	ds	1
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           postdec1	equ	0xFE5
   401                           fsr1l	equ	0xFE1
   402                           
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 7 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  i               2   37[BANK0 ] int 
   413 ;; Return value:  Size  Location     Type
   414 ;;		None               void
   415 ;; Registers used:
   416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       2       0       0       0       0       0       0       0
   424 ;;      Temps:          1       0       0       0       0       0       0       0       0
   425 ;;      Totals:         1       2       0       0       0       0       0       0       0
   426 ;;Total ram usage:        3 bytes
   427 ;; Hardware stack levels required when called:    8
   428 ;; This function calls:
   429 ;;		_Accel_Init
   430 ;;		_System_Init
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text0
   437  0003C2                     __ptext0:
   438                           	opt stack 0
   439  0003C2                     _main:
   440                           	opt stack 23
   441                           
   442                           ;main.c: 8: System_Init();
   443                           
   444                           ;incstack = 0
   445  0003C2  ECC4  F002         	call	_System_Init	;wreg free
   446                           
   447                           ;main.c: 10: LATDbits.LATD0 = 0;
   448  0003C6  908C               	bcf	3980,0,c	;volatile
   449                           
   450                           ;main.c: 11: Accel_Init();
   451  0003C8  ECAE  F000         	call	_Accel_Init	;wreg free
   452                           
   453                           ;main.c: 12: LATDbits.LATD0 = 1;
   454  0003CC  808C               	bsf	3980,0,c	;volatile
   455  0003CE  D000               	goto	l1882
   456  0003D0                     l1882:
   457                           
   458                           ;main.c: 15: LATDbits.LATD0 = ~LATDbits.LATD0;
   459  0003D0  708C               	btg	3980,0,c	;volatile
   460                           
   461                           ;main.c: 16: for (int i = 0; i < 100; i++) _delay((unsigned long)((10)*(8000000/4000.0))
      +                          );
   462  0003D2  0E00               	movlw	0
   463  0003D4  0100               	movlb	0	; () banked
   464  0003D6  6F86               	movwf	(main@i+1)& (0+255),b
   465  0003D8  0E00               	movlw	0
   466  0003DA  6F85               	movwf	main@i& (0+255),b
   467  0003DC                     l1886:
   468                           
   469                           ; BSR set to: 0
   470  0003DC  0100               	movlb	0	; () banked
   471  0003DE  BF86               	btfsc	(main@i+1)& (0+255),7,b
   472  0003E0  D00A               	goto	l1890
   473  0003E2  0100               	movlb	0	; () banked
   474  0003E4  5186               	movf	(main@i+1)& (0+255),w,b
   475  0003E6  E1F4               	bnz	l1882
   476  0003E8  0E64               	movlw	100
   477  0003EA  0100               	movlb	0	; () banked
   478  0003EC  5D85               	subwf	main@i& (0+255),w,b
   479  0003EE  B0D8               	btfsc	status,0,c
   480  0003F0  D7EF               	goto	l1882
   481  0003F2  D001               	goto	l1890
   482                           
   483                           ; BSR set to: 0
   484  0003F4  D7ED               	goto	l1882
   485  0003F6                     l1890:
   486                           
   487                           ; BSR set to: 0
   488  0003F6  0E1A               	movlw	26
   489  0003F8  6E2A               	movwf	??_main& (0+255),c
   490  0003FA  0EF8               	movlw	248
   491  0003FC                     u1877:
   492  0003FC  2EE8               	decfsz	wreg,f,c
   493  0003FE  D7FE               	goto	u1877
   494  000400  2E2A               	decfsz	??_main& (0+255),f,c
   495  000402  D7FC               	goto	u1877
   496  000404  D000               	nop2	
   497  000406  0100               	movlb	0	; () banked
   498  000408  4B85               	infsnz	main@i& (0+255),f,b
   499  00040A  2B86               	incf	(main@i+1)& (0+255),f,b
   500  00040C  D7E7               	goto	l1886
   501                           
   502                           ; BSR set to: 0
   503                           
   504                           ; BSR set to: 0
   505  00040E  D7E0               	goto	l1882
   506                           
   507                           ; BSR set to: 0
   508                           
   509                           ; BSR set to: 0
   510  000410  EF51  F000         	goto	start
   511  000414                     __end_of_main:
   512                           	opt stack 0
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           status	equ	0xFD8
   522                           
   523 ;; *************** function _System_Init *****************
   524 ;; Defined at:
   525 ;;		line 13 in file "system.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;		None               void
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   539 ;;      Params:         0       0       0       0       0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    3
   546 ;; This function calls:
   547 ;;		_CloseI2C
   548 ;;		_OpenI2C
   549 ;;		_OpenUSART
   550 ;;		_baudUSART
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text1
   557  000588                     __ptext1:
   558                           	opt stack 0
   559  000588                     _System_Init:
   560                           	opt stack 27
   561                           
   562                           ;system.c: 15: TRISD = 0b11111110;
   563                           
   564                           ; BSR set to: 0
   565                           ;incstack = 0
   566  000588  0EFE               	movlw	254
   567  00058A  6E95               	movwf	3989,c	;volatile
   568                           
   569                           ;system.c: 16: TRISC = 0b00011000;
   570  00058C  0E18               	movlw	24
   571  00058E  6E94               	movwf	3988,c	;volatile
   572                           
   573                           ;system.c: 17: LATDbits.LATD0 = 0;
   574  000590  908C               	bcf	3980,0,c	;volatile
   575                           
   576                           ;system.c: 20: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   577  000592  0E4F               	movlw	79
   578  000594  16AB               	andwf	4011,f,c	;volatile
   579  000596  9AAC               	bcf	4012,5,c	;volatile
   580  000598  0ECF               	movlw	207
   581  00059A  169D               	andwf	3997,f,c	;volatile
   582                           
   583                           ;system.c: 21: OpenUSART(0b00000000 | 0b00000000 | 0b00000000
   584                           ;system.c: 22: | 0b00000000 | 0b00001000 | 0b00000000, 51);
   585  00059C  0E00               	movlw	0
   586  00059E  6E21               	movwf	OpenUSART@spbrg+1,c
   587  0005A0  0E33               	movlw	51
   588  0005A2  6E20               	movwf	OpenUSART@spbrg,c
   589  0005A4  0E08               	movlw	8
   590  0005A6  ECF1  F000         	call	_OpenUSART
   591                           
   592                           ;system.c: 23: baudUSART (0b00000000 | 0b00000000);
   593  0005AA  0E00               	movlw	0
   594  0005AC  EC6B  F003         	call	_baudUSART
   595                           
   596                           ;system.c: 26: CloseI2C();
   597  0005B0  EC6F  F003         	call	_CloseI2C	;wreg free
   598                           
   599                           ;system.c: 27: OpenI2C(0b00001000, 0b10000000);
   600  0005B4  0E80               	movlw	128
   601  0005B6  6E20               	movwf	OpenI2C@slew,c
   602  0005B8  0E08               	movlw	8
   603  0005BA  EC19  F003         	call	_OpenI2C
   604                           
   605                           ;system.c: 28: SSPADD = 0x0A;
   606  0005BE  0E0A               	movlw	10
   607  0005C0  6EC8               	movwf	4040,c	;volatile
   608                           
   609                           ;system.c: 30: LATDbits.LATD0 = 1;
   610  0005C2  808C               	bsf	3980,0,c	;volatile
   611  0005C4  0012               	return		;funcret
   612  0005C6                     __end_of_System_Init:
   613                           	opt stack 0
   614                           tblptru	equ	0xFF8
   615                           tblptrh	equ	0xFF7
   616                           tblptrl	equ	0xFF6
   617                           tablat	equ	0xFF5
   618                           postinc0	equ	0xFEE
   619                           wreg	equ	0xFE8
   620                           postdec1	equ	0xFE5
   621                           fsr1l	equ	0xFE1
   622                           status	equ	0xFD8
   623                           
   624 ;; *************** function _baudUSART *****************
   625 ;; Defined at:
   626 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\ubaud.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  baudconfig      1    wreg     unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  baudconfig      1   31[COMRAM] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;		None               void
   633 ;; Registers used:
   634 ;;		wreg
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   640 ;;      Params:         0       0       0       0       0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0
   643 ;;      Totals:         1       0       0       0       0       0       0       0       0
   644 ;;Total ram usage:        1 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    2
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_System_Init
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text2
   655  0006D6                     __ptext2:
   656                           	opt stack 0
   657  0006D6                     _baudUSART:
   658                           	opt stack 27
   659                           
   660                           ;incstack = 0
   661                           ;baudUSART@baudconfig stored from wreg
   662  0006D6  6E20               	movwf	baudUSART@baudconfig,c
   663  0006D8  C020  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
   664  0006DC  0012               	return		;funcret
   665  0006DE                     __end_of_baudUSART:
   666                           	opt stack 0
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           status	equ	0xFD8
   676                           
   677 ;; *************** function _OpenUSART *****************
   678 ;; Defined at:
   679 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  config          1    wreg     unsigned char 
   682 ;;  spbrg           2   31[COMRAM] unsigned int 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  config          1   33[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;		None               void
   687 ;; Registers used:
   688 ;;		wreg, status,2
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   694 ;;      Params:         2       0       0       0       0       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0
   697 ;;      Totals:         3       0       0       0       0       0       0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    2
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_System_Init
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text3
   709  0001E2                     __ptext3:
   710                           	opt stack 0
   711  0001E2                     _OpenUSART:
   712                           	opt stack 27
   713                           
   714                           ;incstack = 0
   715                           ;OpenUSART@config stored from wreg
   716  0001E2  6E22               	movwf	OpenUSART@config,c
   717  0001E4  0E00               	movlw	0
   718  0001E6  6EAC               	movwf	4012,c	;volatile
   719  0001E8  0E00               	movlw	0
   720  0001EA  6EAB               	movwf	4011,c	;volatile
   721  0001EC  A022               	btfss	OpenUSART@config,0,c
   722  0001EE  D002               	goto	l1752
   723  0001F0  88AC               	bsf	4012,4,c	;volatile
   724  0001F2  D000               	goto	l1752
   725  0001F4                     l1752:
   726  0001F4  A222               	btfss	OpenUSART@config,1,c
   727  0001F6  D003               	goto	l1756
   728  0001F8  8CAC               	bsf	4012,6,c	;volatile
   729  0001FA  8CAB               	bsf	4011,6,c	;volatile
   730  0001FC  D000               	goto	l1756
   731  0001FE                     l1756:
   732  0001FE  A422               	btfss	OpenUSART@config,2,c
   733  000200  D002               	goto	l1760
   734  000202  8EAC               	bsf	4012,7,c	;volatile
   735  000204  D000               	goto	l1760
   736  000206                     l1760:
   737  000206  A622               	btfss	OpenUSART@config,3,c
   738  000208  D002               	goto	l160
   739  00020A  88AB               	bsf	4011,4,c	;volatile
   740  00020C  D002               	goto	l1764
   741  00020E                     l160:
   742  00020E  8AAB               	bsf	4011,5,c	;volatile
   743  000210  D000               	goto	l1764
   744  000212                     l1764:
   745  000212  B822               	btfsc	OpenUSART@config,4,c
   746  000214  84AC               	bsf	4012,2,c	;volatile
   747  000216  989E               	bcf	3998,4,c	;volatile
   748  000218  AA22               	btfss	OpenUSART@config,5,c
   749  00021A  D002               	goto	l1772
   750  00021C  86AB               	bsf	4011,3,c	;volatile
   751  00021E  D000               	goto	l1772
   752  000220                     l1772:
   753  000220  AC22               	btfss	OpenUSART@config,6,c
   754  000222  D002               	goto	l164
   755  000224  8A9D               	bsf	3997,5,c	;volatile
   756  000226  D001               	goto	l165
   757  000228                     l164:
   758  000228  9A9D               	bcf	3997,5,c	;volatile
   759  00022A                     l165:
   760  00022A  9A9E               	bcf	3998,5,c	;volatile
   761  00022C  AE22               	btfss	OpenUSART@config,7,c
   762  00022E  D002               	goto	l166
   763  000230  889D               	bsf	3997,4,c	;volatile
   764  000232  D001               	goto	l167
   765  000234                     l166:
   766  000234  989D               	bcf	3997,4,c	;volatile
   767  000236                     l167:
   768  000236  C020  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   769  00023A  5021               	movf	OpenUSART@spbrg+1,w,c
   770  00023C  6EB0               	movwf	4016,c	;volatile
   771  00023E  8AAC               	bsf	4012,5,c	;volatile
   772  000240  8EAB               	bsf	4011,7,c	;volatile
   773  000242  9C94               	bcf	3988,6,c	;volatile
   774  000244  8E94               	bsf	3988,7,c	;volatile
   775  000246  B8AC               	btfsc	4012,4,c	;volatile
   776  000248  BEAC               	btfsc	4012,7,c	;volatile
   777  00024A  D002               	goto	l169
   778  00024C  8C94               	bsf	3988,6,c	;volatile
   779  00024E  D000               	goto	l169
   780  000250                     l169:
   781  000250  0012               	return		;funcret
   782  000252                     __end_of_OpenUSART:
   783                           	opt stack 0
   784                           tblptru	equ	0xFF8
   785                           tblptrh	equ	0xFF7
   786                           tblptrl	equ	0xFF6
   787                           tablat	equ	0xFF5
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           postdec1	equ	0xFE5
   791                           fsr1l	equ	0xFE1
   792                           status	equ	0xFD8
   793                           
   794 ;; *************** function _OpenI2C *****************
   795 ;; Defined at:
   796 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_open.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  sync_mode       1    wreg     unsigned char 
   799 ;;  slew            1   31[COMRAM] unsigned char 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  sync_mode       1   32[COMRAM] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;		None               void
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   811 ;;      Params:         1       0       0       0       0       0       0       0       0
   812 ;;      Locals:         1       0       0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0
   814 ;;      Totals:         2       0       0       0       0       0       0       0       0
   815 ;;Total ram usage:        2 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    2
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_System_Init
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text4
   826  000632                     __ptext4:
   827                           	opt stack 0
   828  000632                     _OpenI2C:
   829                           	opt stack 27
   830                           
   831                           ;incstack = 0
   832                           ;OpenI2C@sync_mode stored from wreg
   833  000632  6E21               	movwf	OpenI2C@sync_mode,c
   834  000634  0E3F               	movlw	63
   835  000636  16C7               	andwf	4039,f,c	;volatile
   836  000638  0E00               	movlw	0
   837  00063A  6EC6               	movwf	4038,c	;volatile
   838  00063C  0E00               	movlw	0
   839  00063E  6EC5               	movwf	4037,c	;volatile
   840  000640  5021               	movf	OpenI2C@sync_mode,w,c
   841  000642  12C6               	iorwf	4038,f,c	;volatile
   842  000644  5020               	movf	OpenI2C@slew,w,c
   843  000646  12C7               	iorwf	4039,f,c	;volatile
   844  000648  8293               	bsf	3987,1,c	;volatile
   845  00064A  8093               	bsf	3987,0,c	;volatile
   846  00064C  8AC6               	bsf	4038,5,c	;volatile
   847  00064E  0012               	return		;funcret
   848  000650                     __end_of_OpenI2C:
   849                           	opt stack 0
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           postdec1	equ	0xFE5
   857                           fsr1l	equ	0xFE1
   858                           status	equ	0xFD8
   859                           
   860 ;; *************** function _CloseI2C *****************
   861 ;; Defined at:
   862 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_clos.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;		None               void
   869 ;; Registers used:
   870 ;;		status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         0       0       0       0       0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    2
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_System_Init
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text5
   891  0006DE                     __ptext5:
   892                           	opt stack 0
   893  0006DE                     _CloseI2C:
   894                           	opt stack 27
   895                           
   896                           ;incstack = 0
   897  0006DE  9AC6               	bcf	4038,5,c	;volatile
   898  0006E0  0012               	return		;funcret
   899  0006E2                     __end_of_CloseI2C:
   900                           	opt stack 0
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           postinc0	equ	0xFEE
   906                           wreg	equ	0xFE8
   907                           postdec1	equ	0xFE5
   908                           fsr1l	equ	0xFE1
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function _Accel_Init *****************
   912 ;; Defined at:
   913 ;;		line 5 in file "accel.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  out            20   16[BANK0 ] unsigned char [20]
   918 ;;  fsr             1   36[BANK0 ] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  2    6[None  ] int 
   921 ;; Registers used:
   922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   928 ;;      Params:         0       0       0       0       0       0       0       0       0
   929 ;;      Locals:         0      21       0       0       0       0       0       0       0
   930 ;;      Temps:          0       2       0       0       0       0       0       0       0
   931 ;;      Totals:         0      23       0       0       0       0       0       0       0
   932 ;;Total ram usage:       23 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    7
   935 ;; This function calls:
   936 ;;		_Accel_Active
   937 ;;		_Accel_ReadRegister
   938 ;;		_Accel_StandBy
   939 ;;		_Accel_WriteRegister
   940 ;;		_itoa
   941 ;;		_putsUSART
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text6
   948  00015C                     __ptext6:
   949                           	opt stack 0
   950  00015C                     _Accel_Init:
   951                           	opt stack 23
   952                           
   953                           ;accel.c: 7: while (Accel_ReadRegister(0x0D) != 0x2A);
   954                           
   955                           ;incstack = 0
   956  00015C  D000               	goto	l1858
   957  00015E                     l1858:
   958  00015E  0E0D               	movlw	13
   959  000160  ECF7  F002         	call	_Accel_ReadRegister
   960  000164  0A2A               	xorlw	42
   961  000166  A4D8               	btfss	status,2,c
   962  000168  D7FA               	goto	l1858
   963                           
   964                           ;accel.c: 8: putsUSART(init);
   965  00016A  0E87               	movlw	low _init
   966  00016C  6E21               	movwf	putsUSART@data,c
   967  00016E  0E00               	movlw	high _init
   968  000170  6E22               	movwf	putsUSART@data+1,c
   969  000172  ECE3  F002         	call	_putsUSART	;wreg free
   970                           
   971                           ;accel.c: 10: char out[20];
   972                           ;accel.c: 11: itoa(Accel_ReadRegister(0x0D), out, 16);
   973  000176  0E0D               	movlw	13
   974  000178  ECF7  F002         	call	_Accel_ReadRegister
   975  00017C  0100               	movlb	0	; () banked
   976  00017E  6F6E               	movwf	??_Accel_Init& (0+255),b
   977  000180  6B6F               	clrf	(??_Accel_Init+1)& (0+255),b
   978  000182  C06E  F066         	movff	??_Accel_Init,itoa@buf
   979  000186  C06F  F067         	movff	??_Accel_Init+1,itoa@buf+1
   980  00018A  0E00               	movlw	high Accel_Init@out
   981  00018C  0100               	movlb	0	; () banked
   982  00018E  6F69               	movwf	(itoa@val+1)& (0+255),b
   983  000190  0E70               	movlw	low Accel_Init@out
   984  000192  6F68               	movwf	itoa@val& (0+255),b
   985  000194  0E00               	movlw	0
   986  000196  0100               	movlb	0	; () banked
   987  000198  6F6B               	movwf	(itoa@base+1)& (0+255),b
   988  00019A  0E10               	movlw	16
   989  00019C  6F6A               	movwf	itoa@base& (0+255),b
   990  00019E  EC31  F002         	call	_itoa	;wreg free
   991                           
   992                           ;accel.c: 12: putsUSART(out);
   993  0001A2  0E70               	movlw	low Accel_Init@out
   994  0001A4  6E21               	movwf	putsUSART@data,c
   995  0001A6  0E00               	movlw	high Accel_Init@out
   996  0001A8  6E22               	movwf	putsUSART@data+1,c
   997  0001AA  ECE3  F002         	call	_putsUSART	;wreg free
   998                           
   999                           ;accel.c: 14: Accel_StandBy();
  1000  0001AE  EC41  F003         	call	_Accel_StandBy	;wreg free
  1001                           
  1002                           ;accel.c: 17: byte fsr = 2;
  1003  0001B2  0E02               	movlw	2
  1004  0001B4  0100               	movlb	0	; () banked
  1005  0001B6  6F84               	movwf	Accel_Init@fsr& (0+255),b
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;accel.c: 18: if(fsr > 8) fsr = 8;
  1009  0001B8  0E08               	movlw	8
  1010  0001BA  0100               	movlb	0	; () banked
  1011  0001BC  6584               	cpfsgt	Accel_Init@fsr& (0+255),b
  1012  0001BE  D004               	goto	l1868
  1013                           
  1014                           ; BSR set to: 0
  1015  0001C0  0E08               	movlw	8
  1016  0001C2  0100               	movlb	0	; () banked
  1017  0001C4  6F84               	movwf	Accel_Init@fsr& (0+255),b
  1018  0001C6  D000               	goto	l1868
  1019  0001C8                     l1868:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;accel.c: 19: fsr >>= 2;
  1023  0001C8  0100               	movlb	0	; () banked
  1024  0001CA  90D8               	bcf	status,0,c
  1025  0001CC  3384               	rrcf	Accel_Init@fsr& (0+255),f,b
  1026  0001CE  90D8               	bcf	status,0,c
  1027  0001D0  3384               	rrcf	Accel_Init@fsr& (0+255),f,b
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;accel.c: 20: Accel_WriteRegister(0x0E, fsr);
  1031  0001D2  C084  F022         	movff	Accel_Init@fsr,Accel_WriteRegister@data
  1032  0001D6  0E0E               	movlw	14
  1033  0001D8  ECA1  F002         	call	_Accel_WriteRegister
  1034                           
  1035                           ;accel.c: 22: Accel_Active();
  1036  0001DC  EC4C  F003         	call	_Accel_Active	;wreg free
  1037  0001E0  0012               	return		;funcret
  1038  0001E2                     __end_of_Accel_Init:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           postinc0	equ	0xFEE
  1045                           wreg	equ	0xFE8
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           status	equ	0xFD8
  1049                           
  1050 ;; *************** function _putsUSART *****************
  1051 ;; Defined at:
  1052 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uputs.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  data            2   32[COMRAM] PTR unsigned char 
  1055 ;;		 -> Accel_Init@out(20), init(28), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1067 ;;      Params:         2       0       0       0       0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1070 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1071 ;;Total ram usage:        2 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    3
  1074 ;; This function calls:
  1075 ;;		_WriteUSART
  1076 ;; This function is called by:
  1077 ;;		_Accel_Init
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text7
  1082  0005C6                     __ptext7:
  1083                           	opt stack 0
  1084  0005C6                     _putsUSART:
  1085                           	opt stack 26
  1086                           
  1087                           ;incstack = 0
  1088  0005C6  D000               	goto	l177
  1089  0005C8                     l177:
  1090  0005C8  A2AC               	btfss	4012,1,c	;volatile
  1091  0005CA  D7FE               	goto	l177
  1092  0005CC  C021  FFD9         	movff	putsUSART@data,fsr2l
  1093  0005D0  C022  FFDA         	movff	putsUSART@data+1,fsr2h
  1094  0005D4  50DF               	movf	indf2,w,c
  1095  0005D6  EC36  F003         	call	_WriteUSART
  1096  0005DA  C021  FFD9         	movff	putsUSART@data,fsr2l
  1097  0005DE  C022  FFDA         	movff	putsUSART@data+1,fsr2h
  1098  0005E2  4A21               	infsnz	putsUSART@data,f,c
  1099  0005E4  2A22               	incf	putsUSART@data+1,f,c
  1100  0005E6  50DF               	movf	indf2,w,c
  1101  0005E8  A4D8               	btfss	status,2,c
  1102  0005EA  D7EE               	goto	l177
  1103  0005EC  0012               	return		;funcret
  1104  0005EE                     __end_of_putsUSART:
  1105                           	opt stack 0
  1106                           tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           postdec1	equ	0xFE5
  1113                           fsr1l	equ	0xFE1
  1114                           indf2	equ	0xFDF
  1115                           fsr2h	equ	0xFDA
  1116                           fsr2l	equ	0xFD9
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _WriteUSART *****************
  1120 ;; Defined at:
  1121 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uwrite.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  data            1    wreg     unsigned char 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  data            1   31[COMRAM] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;		None               void
  1128 ;; Registers used:
  1129 ;;		wreg
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        1 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_putsUSART
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text8
  1150  00066C                     __ptext8:
  1151                           	opt stack 0
  1152  00066C                     _WriteUSART:
  1153                           	opt stack 26
  1154                           
  1155                           ;incstack = 0
  1156                           ;WriteUSART@data stored from wreg
  1157  00066C  6E20               	movwf	WriteUSART@data,c
  1158  00066E  ACAC               	btfss	4012,6,c	;volatile
  1159  000670  D005               	goto	l1714
  1160  000672  90AC               	bcf	4012,0,c	;volatile
  1161  000674  A240               	btfss	_USART_Status,1,c
  1162  000676  D002               	goto	l1714
  1163  000678  80AC               	bsf	4012,0,c	;volatile
  1164  00067A  D000               	goto	l1714
  1165  00067C                     l1714:
  1166  00067C  C020  FFAD         	movff	WriteUSART@data,4013	;volatile
  1167  000680  0012               	return		;funcret
  1168  000682                     __end_of_WriteUSART:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec1	equ	0xFE5
  1177                           fsr1l	equ	0xFE1
  1178                           indf2	equ	0xFDF
  1179                           fsr2h	equ	0xFDA
  1180                           fsr2l	equ	0xFD9
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _itoa *****************
  1184 ;; Defined at:
  1185 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  buf             2    6[BANK0 ] PTR unsigned char 
  1188 ;;		 -> RAM(2047), 
  1189 ;;  val             2    8[BANK0 ] int 
  1190 ;;  base            2   10[BANK0 ] int 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  cp              2   12[BANK0 ] PTR unsigned char 
  1193 ;;		 -> RAM(2047), 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  2    6[BANK0 ] PTR unsigned char 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1203 ;;      Params:         0       6       0       0       0       0       0       0       0
  1204 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1206 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1207 ;;Total ram usage:        8 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    4
  1210 ;; This function calls:
  1211 ;;		_utoa
  1212 ;; This function is called by:
  1213 ;;		_Accel_Init
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text9
  1218  000462                     __ptext9:
  1219                           	opt stack 0
  1220  000462                     _itoa:
  1221                           	opt stack 25
  1222                           
  1223                           ;incstack = 0
  1224  000462  C066  F06C         	movff	itoa@buf,itoa@cp
  1225  000466  C067  F06D         	movff	itoa@buf+1,itoa@cp+1
  1226  00046A  0100               	movlb	0	; () banked
  1227  00046C  AF69               	btfss	(itoa@val+1)& (0+255),7,b
  1228  00046E  D00F               	goto	l1824
  1229                           
  1230                           ; BSR set to: 0
  1231  000470  C066  FFD9         	movff	itoa@buf,fsr2l
  1232  000474  C067  FFDA         	movff	itoa@buf+1,fsr2h
  1233  000478  0E2D               	movlw	45
  1234  00047A  6EDF               	movwf	indf2,c
  1235                           
  1236                           ; BSR set to: 0
  1237  00047C  0100               	movlb	0	; () banked
  1238  00047E  4B66               	infsnz	itoa@buf& (0+255),f,b
  1239  000480  2B67               	incf	(itoa@buf+1)& (0+255),f,b
  1240                           
  1241                           ; BSR set to: 0
  1242  000482  0100               	movlb	0	; () banked
  1243  000484  6D68               	negf	itoa@val& (0+255),b
  1244  000486  1F69               	comf	(itoa@val+1)& (0+255),f,b
  1245  000488  B0D8               	btfsc	status,0,c
  1246  00048A  2B69               	incf	(itoa@val+1)& (0+255),f,b
  1247  00048C  D000               	goto	l1824
  1248  00048E                     l1824:
  1249                           
  1250                           ; BSR set to: 0
  1251  00048E  C066  F060         	movff	itoa@buf,utoa@buf
  1252  000492  C067  F061         	movff	itoa@buf+1,utoa@buf+1
  1253  000496  C068  F062         	movff	itoa@val,utoa@val
  1254  00049A  C069  F063         	movff	itoa@val+1,utoa@val+1
  1255  00049E  C06A  F064         	movff	itoa@base,utoa@base
  1256  0004A2  C06B  F065         	movff	itoa@base+1,utoa@base+1
  1257  0004A6  EC53  F000         	call	_utoa	;wreg free
  1258  0004AA  D000               	goto	l729
  1259  0004AC                     l729:
  1260  0004AC  0012               	return		;funcret
  1261  0004AE                     __end_of_itoa:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           postinc0	equ	0xFEE
  1268                           wreg	equ	0xFE8
  1269                           postdec1	equ	0xFE5
  1270                           fsr1l	equ	0xFE1
  1271                           indf2	equ	0xFDF
  1272                           fsr2h	equ	0xFDA
  1273                           fsr2l	equ	0xFD9
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _utoa *****************
  1277 ;; Defined at:
  1278 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  buf             2    0[BANK0 ] PTR unsigned char 
  1281 ;;		 -> RAM(2047), 
  1282 ;;  val             2    2[BANK0 ] unsigned int 
  1283 ;;  base            2    4[BANK0 ] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  v               2   38[COMRAM] unsigned int 
  1286 ;;  c               1   40[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2    0[BANK0 ] PTR unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         0       6       0       0       0       0       0       0       0
  1297 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         3       6       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        9 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    3
  1303 ;; This function calls:
  1304 ;;		___lwdiv
  1305 ;;		___lwmod
  1306 ;; This function is called by:
  1307 ;;		_itoa
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text10
  1312  0000A6                     __ptext10:
  1313                           	opt stack 0
  1314  0000A6                     _utoa:
  1315                           	opt stack 25
  1316                           
  1317                           ;incstack = 0
  1318  0000A6  C062  F027         	movff	utoa@val,utoa@v
  1319  0000AA  C063  F028         	movff	utoa@val+1,utoa@v+1
  1320  0000AE  D000               	goto	l1718
  1321  0000B0                     l1718:
  1322  0000B0  C027  F020         	movff	utoa@v,___lwdiv@dividend
  1323  0000B4  C028  F021         	movff	utoa@v+1,___lwdiv@dividend+1
  1324  0000B8  C064  F022         	movff	utoa@base,___lwdiv@divisor
  1325  0000BC  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  1326  0000C0  EC5D  F001         	call	___lwdiv	;wreg free
  1327  0000C4  C020  F027         	movff	?___lwdiv,utoa@v
  1328  0000C8  C021  F028         	movff	?___lwdiv+1,utoa@v+1
  1329  0000CC  0100               	movlb	0	; () banked
  1330  0000CE  4B60               	infsnz	utoa@buf& (0+255),f,b
  1331  0000D0  2B61               	incf	(utoa@buf+1)& (0+255),f,b
  1332                           
  1333                           ; BSR set to: 0
  1334  0000D2  5027               	movf	utoa@v,w,c
  1335  0000D4  1028               	iorwf	utoa@v+1,w,c
  1336  0000D6  A4D8               	btfss	status,2,c
  1337  0000D8  D7EB               	goto	l1718
  1338                           
  1339                           ; BSR set to: 0
  1340                           
  1341                           ; BSR set to: 0
  1342  0000DA  C060  FFD9         	movff	utoa@buf,fsr2l
  1343  0000DE  C061  FFDA         	movff	utoa@buf+1,fsr2h
  1344  0000E2  0E00               	movlw	0
  1345  0000E4  6EDF               	movwf	indf2,c
  1346                           
  1347                           ; BSR set to: 0
  1348  0000E6  0100               	movlb	0	; () banked
  1349  0000E8  0760               	decf	utoa@buf& (0+255),f,b
  1350  0000EA  A0D8               	btfss	status,0,c
  1351  0000EC  0761               	decf	(utoa@buf+1)& (0+255),f,b
  1352  0000EE  D000               	goto	l1728
  1353  0000F0                     l1728:
  1354                           
  1355                           ; BSR set to: 0
  1356  0000F0  C062  F020         	movff	utoa@val,___lwmod@dividend
  1357  0000F4  C063  F021         	movff	utoa@val+1,___lwmod@dividend+1
  1358  0000F8  C064  F022         	movff	utoa@base,___lwmod@divisor
  1359  0000FC  C065  F023         	movff	utoa@base+1,___lwmod@divisor+1
  1360  000100  EC57  F002         	call	___lwmod	;wreg free
  1361  000104  5020               	movf	?___lwmod,w,c
  1362  000106  6E29               	movwf	utoa@c,c
  1363  000108  C062  F020         	movff	utoa@val,___lwdiv@dividend
  1364  00010C  C063  F021         	movff	utoa@val+1,___lwdiv@dividend+1
  1365  000110  C064  F022         	movff	utoa@base,___lwdiv@divisor
  1366  000114  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  1367  000118  EC5D  F001         	call	___lwdiv	;wreg free
  1368  00011C  C020  F062         	movff	?___lwdiv,utoa@val
  1369  000120  C021  F063         	movff	?___lwdiv+1,utoa@val+1
  1370  000124  0E09               	movlw	9
  1371  000126  6429               	cpfsgt	utoa@c,c
  1372  000128  D002               	goto	l735
  1373  00012A  0E07               	movlw	7
  1374  00012C  2629               	addwf	utoa@c,f,c
  1375  00012E                     l735:
  1376  00012E  0E30               	movlw	48
  1377  000130  2629               	addwf	utoa@c,f,c
  1378  000132  C060  FFD9         	movff	utoa@buf,fsr2l
  1379  000136  C061  FFDA         	movff	utoa@buf+1,fsr2h
  1380  00013A  C029  FFDF         	movff	utoa@c,indf2
  1381  00013E  0100               	movlb	0	; () banked
  1382  000140  0760               	decf	utoa@buf& (0+255),f,b
  1383  000142  A0D8               	btfss	status,0,c
  1384  000144  0761               	decf	(utoa@buf+1)& (0+255),f,b
  1385                           
  1386                           ; BSR set to: 0
  1387  000146  0100               	movlb	0	; () banked
  1388  000148  5162               	movf	utoa@val& (0+255),w,b
  1389  00014A  0100               	movlb	0	; () banked
  1390  00014C  1163               	iorwf	(utoa@val+1)& (0+255),w,b
  1391  00014E  A4D8               	btfss	status,2,c
  1392  000150  D7CF               	goto	l1728
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;	Return value of _utoa is never used
  1396                           
  1397                           ; BSR set to: 0
  1398  000152  0100               	movlb	0	; () banked
  1399  000154  4B60               	infsnz	utoa@buf& (0+255),f,b
  1400  000156  2B61               	incf	(utoa@buf+1)& (0+255),f,b
  1401  000158  D000               	goto	l737
  1402  00015A                     l737:
  1403                           
  1404                           ; BSR set to: 0
  1405  00015A  0012               	return		;funcret
  1406  00015C                     __end_of_utoa:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postdec1	equ	0xFE5
  1415                           fsr1l	equ	0xFE1
  1416                           indf2	equ	0xFDF
  1417                           fsr2h	equ	0xFDA
  1418                           fsr2l	equ	0xFD9
  1419                           status	equ	0xFD8
  1420                           
  1421 ;; *************** function ___lwmod *****************
  1422 ;; Defined at:
  1423 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  dividend        2   31[COMRAM] unsigned int 
  1426 ;;  divisor         2   33[COMRAM] unsigned int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  counter         1   35[COMRAM] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2   31[COMRAM] unsigned int 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         4       0       0       0       0       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1441 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        5 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    2
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_utoa
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text11
  1453  0004AE                     __ptext11:
  1454                           	opt stack 0
  1455  0004AE                     ___lwmod:
  1456                           	opt stack 25
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;incstack = 0
  1460  0004AE  5022               	movf	___lwmod@divisor,w,c
  1461  0004B0  1023               	iorwf	___lwmod@divisor+1,w,c
  1462  0004B2  B4D8               	btfsc	status,2,c
  1463  0004B4  D01D               	goto	l839
  1464  0004B6  0E01               	movlw	1
  1465  0004B8  6E24               	movwf	___lwmod@counter,c
  1466  0004BA  D005               	goto	l1682
  1467  0004BC                     l1680:
  1468  0004BC  90D8               	bcf	status,0,c
  1469  0004BE  3622               	rlcf	___lwmod@divisor,f,c
  1470  0004C0  3623               	rlcf	___lwmod@divisor+1,f,c
  1471  0004C2  2A24               	incf	___lwmod@counter,f,c
  1472  0004C4  D000               	goto	l1682
  1473  0004C6                     l1682:
  1474  0004C6  BE23               	btfsc	___lwmod@divisor+1,7,c
  1475  0004C8  D002               	goto	l1684
  1476  0004CA  D7F8               	goto	l1680
  1477  0004CC  D000               	goto	l1684
  1478  0004CE                     l1684:
  1479  0004CE  5022               	movf	___lwmod@divisor,w,c
  1480  0004D0  5C20               	subwf	___lwmod@dividend,w,c
  1481  0004D2  5023               	movf	___lwmod@divisor+1,w,c
  1482  0004D4  5821               	subwfb	___lwmod@dividend+1,w,c
  1483  0004D6  A0D8               	btfss	status,0,c
  1484  0004D8  D005               	goto	l1688
  1485  0004DA  5022               	movf	___lwmod@divisor,w,c
  1486  0004DC  5E20               	subwf	___lwmod@dividend,f,c
  1487  0004DE  5023               	movf	___lwmod@divisor+1,w,c
  1488  0004E0  5A21               	subwfb	___lwmod@dividend+1,f,c
  1489  0004E2  D000               	goto	l1688
  1490  0004E4                     l1688:
  1491  0004E4  90D8               	bcf	status,0,c
  1492  0004E6  3223               	rrcf	___lwmod@divisor+1,f,c
  1493  0004E8  3222               	rrcf	___lwmod@divisor,f,c
  1494  0004EA  2E24               	decfsz	___lwmod@counter,f,c
  1495  0004EC  D7F0               	goto	l1684
  1496  0004EE  D000               	goto	l839
  1497  0004F0                     l839:
  1498  0004F0  C020  F020         	movff	___lwmod@dividend,?___lwmod
  1499  0004F4  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
  1500  0004F8  0012               	return		;funcret
  1501  0004FA                     __end_of___lwmod:
  1502                           	opt stack 0
  1503                           tblptru	equ	0xFF8
  1504                           tblptrh	equ	0xFF7
  1505                           tblptrl	equ	0xFF6
  1506                           tablat	equ	0xFF5
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           postdec1	equ	0xFE5
  1510                           fsr1l	equ	0xFE1
  1511                           indf2	equ	0xFDF
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function ___lwdiv *****************
  1517 ;; Defined at:
  1518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  dividend        2   31[COMRAM] unsigned int 
  1521 ;;  divisor         2   33[COMRAM] unsigned int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  quotient        2   36[COMRAM] unsigned int 
  1524 ;;  counter         1   35[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2   31[COMRAM] unsigned int 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1534 ;;      Params:         4       0       0       0       0       0       0       0       0
  1535 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1537 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1538 ;;Total ram usage:        7 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    2
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_utoa
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text12
  1549  0002BA                     __ptext12:
  1550                           	opt stack 0
  1551  0002BA                     ___lwdiv:
  1552                           	opt stack 25
  1553                           
  1554                           ;incstack = 0
  1555  0002BA  0E00               	movlw	0
  1556  0002BC  6E26               	movwf	___lwdiv@quotient+1,c
  1557  0002BE  0E00               	movlw	0
  1558  0002C0  6E25               	movwf	___lwdiv@quotient,c
  1559  0002C2  5022               	movf	___lwdiv@divisor,w,c
  1560  0002C4  1023               	iorwf	___lwdiv@divisor+1,w,c
  1561  0002C6  B4D8               	btfsc	status,2,c
  1562  0002C8  D021               	goto	l829
  1563  0002CA  0E01               	movlw	1
  1564  0002CC  6E24               	movwf	___lwdiv@counter,c
  1565  0002CE  D005               	goto	l1662
  1566  0002D0                     l1660:
  1567  0002D0  90D8               	bcf	status,0,c
  1568  0002D2  3622               	rlcf	___lwdiv@divisor,f,c
  1569  0002D4  3623               	rlcf	___lwdiv@divisor+1,f,c
  1570  0002D6  2A24               	incf	___lwdiv@counter,f,c
  1571  0002D8  D000               	goto	l1662
  1572  0002DA                     l1662:
  1573  0002DA  BE23               	btfsc	___lwdiv@divisor+1,7,c
  1574  0002DC  D002               	goto	l1664
  1575  0002DE  D7F8               	goto	l1660
  1576  0002E0  D000               	goto	l1664
  1577  0002E2                     l1664:
  1578  0002E2  90D8               	bcf	status,0,c
  1579  0002E4  3625               	rlcf	___lwdiv@quotient,f,c
  1580  0002E6  3626               	rlcf	___lwdiv@quotient+1,f,c
  1581  0002E8  5022               	movf	___lwdiv@divisor,w,c
  1582  0002EA  5C20               	subwf	___lwdiv@dividend,w,c
  1583  0002EC  5023               	movf	___lwdiv@divisor+1,w,c
  1584  0002EE  5821               	subwfb	___lwdiv@dividend+1,w,c
  1585  0002F0  A0D8               	btfss	status,0,c
  1586  0002F2  D006               	goto	l1672
  1587  0002F4  5022               	movf	___lwdiv@divisor,w,c
  1588  0002F6  5E20               	subwf	___lwdiv@dividend,f,c
  1589  0002F8  5023               	movf	___lwdiv@divisor+1,w,c
  1590  0002FA  5A21               	subwfb	___lwdiv@dividend+1,f,c
  1591  0002FC  8025               	bsf	___lwdiv@quotient,0,c
  1592  0002FE  D000               	goto	l1672
  1593  000300                     l1672:
  1594  000300  90D8               	bcf	status,0,c
  1595  000302  3223               	rrcf	___lwdiv@divisor+1,f,c
  1596  000304  3222               	rrcf	___lwdiv@divisor,f,c
  1597  000306  2E24               	decfsz	___lwdiv@counter,f,c
  1598  000308  D7EC               	goto	l1664
  1599  00030A  D000               	goto	l829
  1600  00030C                     l829:
  1601  00030C  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
  1602  000310  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1603  000314  0012               	return		;funcret
  1604  000316                     __end_of___lwdiv:
  1605                           	opt stack 0
  1606                           tblptru	equ	0xFF8
  1607                           tblptrh	equ	0xFF7
  1608                           tblptrl	equ	0xFF6
  1609                           tablat	equ	0xFF5
  1610                           postinc0	equ	0xFEE
  1611                           wreg	equ	0xFE8
  1612                           postdec1	equ	0xFE5
  1613                           fsr1l	equ	0xFE1
  1614                           indf2	equ	0xFDF
  1615                           fsr2h	equ	0xFDA
  1616                           fsr2l	equ	0xFD9
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _Accel_StandBy *****************
  1620 ;; Defined at:
  1621 ;;		line 25 in file "accel.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  c               1   40[COMRAM] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1638 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1639 ;;Total ram usage:        1 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    6
  1642 ;; This function calls:
  1643 ;;		_Accel_ReadRegister
  1644 ;;		_Accel_WriteRegister
  1645 ;; This function is called by:
  1646 ;;		_Accel_Init
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text13
  1651  000682                     __ptext13:
  1652                           	opt stack 0
  1653  000682                     _Accel_StandBy:
  1654                           	opt stack 23
  1655                           
  1656                           ;accel.c: 27: byte c = Accel_ReadRegister(0x2A);
  1657                           
  1658                           ;incstack = 0
  1659  000682  0E2A               	movlw	42
  1660  000684  ECF7  F002         	call	_Accel_ReadRegister
  1661  000688  6E29               	movwf	Accel_StandBy@c,c
  1662                           
  1663                           ;accel.c: 28: Accel_WriteRegister(0x2A, c & ~(0x01));
  1664  00068A  5029               	movf	Accel_StandBy@c,w,c
  1665  00068C  0BFE               	andlw	254
  1666  00068E  6E22               	movwf	Accel_WriteRegister@data,c
  1667  000690  0E2A               	movlw	42
  1668  000692  ECA1  F002         	call	_Accel_WriteRegister
  1669  000696  0012               	return		;funcret
  1670  000698                     __end_of_Accel_StandBy:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           postinc0	equ	0xFEE
  1677                           wreg	equ	0xFE8
  1678                           postdec1	equ	0xFE5
  1679                           fsr1l	equ	0xFE1
  1680                           indf2	equ	0xFDF
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _Accel_Active *****************
  1686 ;; Defined at:
  1687 ;;		line 31 in file "accel.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  c               1   40[COMRAM] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;		None               void
  1694 ;; Registers used:
  1695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1704 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    6
  1708 ;; This function calls:
  1709 ;;		_Accel_ReadRegister
  1710 ;;		_Accel_WriteRegister
  1711 ;; This function is called by:
  1712 ;;		_Accel_Init
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text14
  1717  000698                     __ptext14:
  1718                           	opt stack 0
  1719  000698                     _Accel_Active:
  1720                           	opt stack 23
  1721                           
  1722                           ;accel.c: 33: byte c = Accel_ReadRegister(0x2A);
  1723                           
  1724                           ;incstack = 0
  1725  000698  0E2A               	movlw	42
  1726  00069A  ECF7  F002         	call	_Accel_ReadRegister
  1727  00069E  6E29               	movwf	Accel_Active@c,c
  1728                           
  1729                           ;accel.c: 34: Accel_WriteRegister(0x2A, c | 0x01);
  1730  0006A0  5029               	movf	Accel_Active@c,w,c
  1731  0006A2  0901               	iorlw	1
  1732  0006A4  6E22               	movwf	Accel_WriteRegister@data,c
  1733  0006A6  0E2A               	movlw	42
  1734  0006A8  ECA1  F002         	call	_Accel_WriteRegister
  1735  0006AC  0012               	return		;funcret
  1736  0006AE                     __end_of_Accel_Active:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           postdec1	equ	0xFE5
  1745                           fsr1l	equ	0xFE1
  1746                           indf2	equ	0xFDF
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _Accel_WriteRegister *****************
  1752 ;; Defined at:
  1753 ;;		line 60 in file "accel.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  reg             1    wreg     unsigned char 
  1756 ;;  data            1   33[COMRAM] unsigned char 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  reg             1   34[COMRAM] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;		None               void
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1768 ;;      Params:         1       0       0       0       0       0       0       0       0
  1769 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1771 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1772 ;;Total ram usage:        2 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    4
  1775 ;; This function calls:
  1776 ;;		_IdleI2C
  1777 ;;		_WriteI2C
  1778 ;; This function is called by:
  1779 ;;		_Accel_Init
  1780 ;;		_Accel_StandBy
  1781 ;;		_Accel_Active
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text15
  1786  000542                     __ptext15:
  1787                           	opt stack 0
  1788  000542                     _Accel_WriteRegister:
  1789                           	opt stack 25
  1790                           
  1791                           ;incstack = 0
  1792                           ;Accel_WriteRegister@reg stored from wreg
  1793  000542  6E23               	movwf	Accel_WriteRegister@reg,c
  1794                           
  1795                           ;accel.c: 62: IdleI2C();
  1796  000544  EC62  F003         	call	_IdleI2C	;wreg free
  1797                           
  1798                           ;accel.c: 63: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1799  000548  80C5               	bsf	4037,0,c	;volatile
  1800  00054A  D000               	goto	l95
  1801  00054C                     l95:
  1802  00054C  A0C5               	btfss	4037,0,c	;volatile
  1803  00054E  D002               	goto	l98
  1804  000550  D7FD               	goto	l95
  1805                           
  1806                           ;accel.c: 64: while (SSPCON2bits.SEN);
  1807  000552  D000               	goto	l98
  1808  000554                     l98:
  1809  000554  B0C5               	btfsc	4037,0,c	;volatile
  1810  000556  D7FE               	goto	l98
  1811                           
  1812                           ;accel.c: 66: WriteI2C(0x1D & 0xFE);
  1813  000558  0E1C               	movlw	28
  1814  00055A  EC8B  F001         	call	_WriteI2C
  1815                           
  1816                           ;accel.c: 67: IdleI2C();
  1817  00055E  EC62  F003         	call	_IdleI2C	;wreg free
  1818                           
  1819                           ;accel.c: 69: WriteI2C(reg);
  1820  000562  5023               	movf	Accel_WriteRegister@reg,w,c
  1821  000564  EC8B  F001         	call	_WriteI2C
  1822                           
  1823                           ;accel.c: 70: IdleI2C();
  1824  000568  EC62  F003         	call	_IdleI2C	;wreg free
  1825                           
  1826                           ;accel.c: 72: WriteI2C(data);
  1827  00056C  5022               	movf	Accel_WriteRegister@data,w,c
  1828  00056E  EC8B  F001         	call	_WriteI2C
  1829                           
  1830                           ;accel.c: 73: IdleI2C();
  1831  000572  EC62  F003         	call	_IdleI2C	;wreg free
  1832                           
  1833                           ;accel.c: 75: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1834  000576  84C5               	bsf	4037,2,c	;volatile
  1835  000578  D000               	goto	l101
  1836  00057A                     l101:
  1837  00057A  A4C5               	btfss	4037,2,c	;volatile
  1838  00057C  D002               	goto	l104
  1839  00057E  D7FD               	goto	l101
  1840                           
  1841                           ;accel.c: 76: while (SSPCON2bits.PEN);
  1842  000580  D000               	goto	l104
  1843  000582                     l104:
  1844  000582  B4C5               	btfsc	4037,2,c	;volatile
  1845  000584  D7FE               	goto	l104
  1846  000586  0012               	return		;funcret
  1847  000588                     __end_of_Accel_WriteRegister:
  1848                           	opt stack 0
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           postdec1	equ	0xFE5
  1856                           fsr1l	equ	0xFE1
  1857                           indf2	equ	0xFDF
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _Accel_ReadRegister *****************
  1863 ;; Defined at:
  1864 ;;		line 79 in file "accel.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  reg             1    wreg     unsigned char 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  reg             1   38[COMRAM] unsigned char 
  1869 ;;  out             1   39[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      unsigned char 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0
  1880 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    5
  1886 ;; This function calls:
  1887 ;;		_Accel_ReadRegisters
  1888 ;; This function is called by:
  1889 ;;		_Accel_Init
  1890 ;;		_Accel_StandBy
  1891 ;;		_Accel_Active
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text16
  1896  0005EE                     __ptext16:
  1897                           	opt stack 0
  1898  0005EE                     _Accel_ReadRegister:
  1899                           	opt stack 23
  1900                           
  1901                           ;incstack = 0
  1902                           ;Accel_ReadRegister@reg stored from wreg
  1903  0005EE  6E27               	movwf	Accel_ReadRegister@reg,c
  1904                           
  1905                           ;accel.c: 81: byte out = 0;
  1906  0005F0  0E00               	movlw	0
  1907  0005F2  6E28               	movwf	Accel_ReadRegister@out,c
  1908                           
  1909                           ;accel.c: 83: Accel_ReadRegisters(reg, &out, 1);
  1910  0005F4  0E28               	movlw	low Accel_ReadRegister@out
  1911  0005F6  6E23               	movwf	Accel_ReadRegisters@out,c
  1912  0005F8  0E00               	movlw	high Accel_ReadRegister@out
  1913  0005FA  6E24               	movwf	Accel_ReadRegisters@out+1,c
  1914  0005FC  0E00               	movlw	0
  1915  0005FE  6E26               	movwf	Accel_ReadRegisters@length+1,c
  1916  000600  0E01               	movlw	1
  1917  000602  6E25               	movwf	Accel_ReadRegisters@length,c
  1918  000604  5027               	movf	Accel_ReadRegister@reg,w,c
  1919  000606  EC0A  F002         	call	_Accel_ReadRegisters
  1920                           
  1921                           ;accel.c: 85: return out;
  1922  00060A  5028               	movf	Accel_ReadRegister@out,w,c
  1923  00060C  D000               	goto	l110
  1924  00060E                     l110:
  1925  00060E  0012               	return		;funcret
  1926  000610                     __end_of_Accel_ReadRegister:
  1927                           	opt stack 0
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           postdec1	equ	0xFE5
  1935                           fsr1l	equ	0xFE1
  1936                           indf2	equ	0xFDF
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _Accel_ReadRegisters *****************
  1942 ;; Defined at:
  1943 ;;		line 88 in file "accel.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  reg             1    wreg     unsigned char 
  1946 ;;  out             2   34[COMRAM] PTR unsigned char 
  1947 ;;		 -> Accel_ReadRegister@out(1), Accel_Get@raw(6), 
  1948 ;;  length          2   36[COMRAM] int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  reg             1    0[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1960 ;;      Params:         4       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:        4 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    4
  1967 ;; This function calls:
  1968 ;;		_IdleI2C
  1969 ;;		_WriteI2C
  1970 ;;		_getsI2C
  1971 ;; This function is called by:
  1972 ;;		_Accel_ReadRegister
  1973 ;;		_Accel_Get
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text17
  1978  000414                     __ptext17:
  1979                           	opt stack 0
  1980  000414                     _Accel_ReadRegisters:
  1981                           	opt stack 23
  1982                           
  1983                           ;accel.c: 90: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1984                           
  1985                           ;incstack = 0
  1986  000414  80C5               	bsf	4037,0,c	;volatile
  1987  000416  D000               	goto	l113
  1988  000418                     l113:
  1989  000418  A0C5               	btfss	4037,0,c	;volatile
  1990  00041A  D002               	goto	l116
  1991  00041C  D7FD               	goto	l113
  1992                           
  1993                           ;accel.c: 91: while (SSPCON2bits.SEN);
  1994  00041E  D000               	goto	l116
  1995  000420                     l116:
  1996  000420  B0C5               	btfsc	4037,0,c	;volatile
  1997  000422  D7FE               	goto	l116
  1998                           
  1999                           ;accel.c: 93: WriteI2C(0x1D | 0x01);
  2000  000424  0E1D               	movlw	29
  2001  000426  EC8B  F001         	call	_WriteI2C
  2002                           
  2003                           ;accel.c: 94: IdleI2C();
  2004  00042A  EC62  F003         	call	_IdleI2C	;wreg free
  2005                           
  2006                           ;accel.c: 96: getsI2C(out, length);
  2007  00042E  C023  F020         	movff	Accel_ReadRegisters@out,getsI2C@rdptr
  2008  000432  C024  F021         	movff	Accel_ReadRegisters@out+1,getsI2C@rdptr+1
  2009  000436  C025  F022         	movff	Accel_ReadRegisters@length,getsI2C@length
  2010  00043A  ECB7  F001         	call	_getsI2C	;wreg free
  2011                           
  2012                           ;accel.c: 97: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2013  00043E  8AC5               	bsf	4037,5,c	;volatile
  2014  000440  88C5               	bsf	4037,4,c	;volatile
  2015  000442  D000               	goto	l119
  2016  000444                     l119:
  2017  000444  A8C5               	btfss	4037,4,c	;volatile
  2018  000446  D002               	goto	l122
  2019  000448  D7FD               	goto	l119
  2020                           
  2021                           ;accel.c: 98: while (SSPCON2bits.ACKEN);
  2022  00044A  D000               	goto	l122
  2023  00044C                     l122:
  2024  00044C  B8C5               	btfsc	4037,4,c	;volatile
  2025  00044E  D7FE               	goto	l122
  2026                           
  2027                           ;accel.c: 100: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2028  000450  84C5               	bsf	4037,2,c	;volatile
  2029  000452  D000               	goto	l125
  2030  000454                     l125:
  2031  000454  A4C5               	btfss	4037,2,c	;volatile
  2032  000456  D002               	goto	l128
  2033  000458  D7FD               	goto	l125
  2034                           
  2035                           ;accel.c: 101: while (SSPCON2bits.PEN);
  2036  00045A  D000               	goto	l128
  2037  00045C                     l128:
  2038  00045C  B4C5               	btfsc	4037,2,c	;volatile
  2039  00045E  D7FE               	goto	l128
  2040  000460  0012               	return		;funcret
  2041  000462                     __end_of_Accel_ReadRegisters:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           postdec1	equ	0xFE5
  2050                           fsr1l	equ	0xFE1
  2051                           indf2	equ	0xFDF
  2052                           fsr2h	equ	0xFDA
  2053                           fsr2l	equ	0xFD9
  2054                           status	equ	0xFD8
  2055                           
  2056 ;; *************** function _getsI2C *****************
  2057 ;; Defined at:
  2058 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_gets.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  rdptr           2   31[COMRAM] PTR unsigned char 
  2061 ;;		 -> Accel_ReadRegister@out(1), Accel_Get@raw(6), 
  2062 ;;  length          1   33[COMRAM] unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      char 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2074 ;;      Params:         3       0       0       0       0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2077 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2078 ;;Total ram usage:        3 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    3
  2081 ;; This function calls:
  2082 ;;		_ReadI2C
  2083 ;; This function is called by:
  2084 ;;		_Accel_ReadRegisters
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text18
  2089  00036E                     __ptext18:
  2090                           	opt stack 0
  2091  00036E                     _getsI2C:
  2092                           	opt stack 23
  2093                           
  2094                           ;incstack = 0
  2095  00036E  D024               	goto	l1642
  2096  000370                     l1628:
  2097  000370  EC08  F003         	call	_ReadI2C	;wreg free
  2098  000374  C020  FFD9         	movff	getsI2C@rdptr,fsr2l
  2099  000378  C021  FFDA         	movff	getsI2C@rdptr+1,fsr2h
  2100  00037C  6EDF               	movwf	indf2,c
  2101  00037E  4A20               	infsnz	getsI2C@rdptr,f,c
  2102  000380  2A21               	incf	getsI2C@rdptr+1,f,c
  2103  000382  D000               	goto	l210
  2104  000384                     l210:
  2105  000384  B6C5               	btfsc	4037,3,c	;volatile
  2106  000386  D7FE               	goto	l210
  2107  000388  B6A1               	btfsc	4001,3,c	;volatile
  2108  00038A  D01A               	goto	l214
  2109  00038C  D001               	goto	l1634
  2110                           
  2111                           ;	Return value of _getsI2C is never used
  2112  00038E  D018               	goto	l214
  2113  000390                     l1634:
  2114  000390  50C6               	movf	4038,w,c	;volatile
  2115  000392  0B0F               	andlw	15
  2116  000394  0A08               	xorlw	8
  2117  000396  B4D8               	btfsc	status,2,c
  2118  000398  D005               	goto	l1638
  2119  00039A  50C6               	movf	4038,w,c	;volatile
  2120  00039C  0B0F               	andlw	15
  2121  00039E  0A0B               	xorlw	11
  2122  0003A0  A4D8               	btfss	status,2,c
  2123  0003A2  D00A               	goto	l1642
  2124  0003A4                     l1638:
  2125  0003A4  5022               	movf	getsI2C@length,w,c
  2126  0003A6  B4D8               	btfsc	status,2,c
  2127  0003A8  D007               	goto	l1642
  2128  0003AA  9AC5               	bcf	4037,5,c	;volatile
  2129  0003AC  88C5               	bsf	4037,4,c	;volatile
  2130  0003AE  D000               	goto	l219
  2131  0003B0                     l219:
  2132  0003B0  A8C5               	btfss	4037,4,c	;volatile
  2133  0003B2  D002               	goto	l1642
  2134  0003B4  D7FD               	goto	l219
  2135  0003B6  D000               	goto	l1642
  2136  0003B8                     l1642:
  2137  0003B8  0622               	decf	getsI2C@length,f,c
  2138  0003BA  2822               	incf	getsI2C@length,w,c
  2139  0003BC  A4D8               	btfss	status,2,c
  2140  0003BE  D7D8               	goto	l1628
  2141  0003C0                     l214:
  2142  0003C0  0012               	return		;funcret
  2143  0003C2                     __end_of_getsI2C:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           postinc0	equ	0xFEE
  2150                           wreg	equ	0xFE8
  2151                           postdec1	equ	0xFE5
  2152                           fsr1l	equ	0xFE1
  2153                           indf2	equ	0xFDF
  2154                           fsr2h	equ	0xFDA
  2155                           fsr2l	equ	0xFD9
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _ReadI2C *****************
  2159 ;; Defined at:
  2160 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_read.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      unsigned char 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    2
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_getsI2C
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text19
  2189  000610                     __ptext19:
  2190                           	opt stack 0
  2191  000610                     _ReadI2C:
  2192                           	opt stack 23
  2193                           
  2194                           ;incstack = 0
  2195  000610  50C6               	movf	4038,w,c	;volatile
  2196  000612  0B0F               	andlw	15
  2197  000614  0A08               	xorlw	8
  2198  000616  B4D8               	btfsc	status,2,c
  2199  000618  D005               	goto	l256
  2200  00061A  50C6               	movf	4038,w,c	;volatile
  2201  00061C  0B0F               	andlw	15
  2202  00061E  0A0B               	xorlw	11
  2203  000620  A4D8               	btfss	status,2,c
  2204  000622  D002               	goto	l257
  2205  000624                     l256:
  2206  000624  86C5               	bsf	4037,3,c	;volatile
  2207  000626  D000               	goto	l257
  2208  000628                     l257:
  2209  000628  A0C7               	btfss	4039,0,c	;volatile
  2210  00062A  D7FE               	goto	l257
  2211  00062C  50C9               	movf	4041,w,c	;volatile
  2212  00062E  D000               	goto	l260
  2213  000630                     l260:
  2214  000630  0012               	return		;funcret
  2215  000632                     __end_of_ReadI2C:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1l	equ	0xFE1
  2225                           indf2	equ	0xFDF
  2226                           fsr2h	equ	0xFDA
  2227                           fsr2l	equ	0xFD9
  2228                           status	equ	0xFD8
  2229                           
  2230 ;; *************** function _WriteI2C *****************
  2231 ;; Defined at:
  2232 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_writ.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  data_out        1    wreg     unsigned char 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  data_out        1   32[COMRAM] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      char 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2246 ;;      Params:         0       0       0       0       0       0       0       0       0
  2247 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2249 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2250 ;;Total ram usage:        1 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    3
  2253 ;; This function calls:
  2254 ;;		_IdleI2C
  2255 ;; This function is called by:
  2256 ;;		_Accel_WriteRegister
  2257 ;;		_Accel_ReadRegisters
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text20
  2262  000316                     __ptext20:
  2263                           	opt stack 0
  2264  000316                     _WriteI2C:
  2265                           	opt stack 25
  2266                           
  2267                           ;incstack = 0
  2268                           ;WriteI2C@data_out stored from wreg
  2269  000316  6E21               	movwf	WriteI2C@data_out,c
  2270  000318  C021  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2271  00031C  BEC6               	btfsc	4038,7,c	;volatile
  2272  00031E  D026               	goto	l278
  2273  000320  D001               	goto	l1602
  2274                           
  2275                           ;	Return value of _WriteI2C is never used
  2276  000322  D024               	goto	l278
  2277  000324                     l1602:
  2278  000324  50C6               	movf	4038,w,c	;volatile
  2279  000326  0B0F               	andlw	15
  2280  000328  0A08               	xorlw	8
  2281  00032A  B4D8               	btfsc	status,2,c
  2282  00032C  D00D               	goto	l1614
  2283  00032E  50C6               	movf	4038,w,c	;volatile
  2284  000330  0B0F               	andlw	15
  2285  000332  0A0B               	xorlw	11
  2286  000334  B4D8               	btfsc	status,2,c
  2287  000336  D008               	goto	l1614
  2288  000338  88C6               	bsf	4038,4,c	;volatile
  2289  00033A  D000               	goto	l281
  2290  00033C                     l281:
  2291  00033C  A69E               	btfss	3998,3,c	;volatile
  2292  00033E  D7FE               	goto	l281
  2293  000340  B4C7               	btfsc	4039,2,c	;volatile
  2294  000342  D014               	goto	l278
  2295  000344  50C7               	movf	4039,w,c	;volatile
  2296                           
  2297                           ;	Return value of _WriteI2C is never used
  2298                           
  2299                           ;	Return value of _WriteI2C is never used
  2300  000346  D012               	goto	l278
  2301  000348                     l1614:
  2302  000348  50C6               	movf	4038,w,c	;volatile
  2303  00034A  0B0F               	andlw	15
  2304  00034C  0A08               	xorlw	8
  2305  00034E  B4D8               	btfsc	status,2,c
  2306  000350  D007               	goto	l290
  2307  000352  50C6               	movf	4038,w,c	;volatile
  2308  000354  0B0F               	andlw	15
  2309  000356  0A0B               	xorlw	11
  2310  000358  B4D8               	btfsc	status,2,c
  2311  00035A  D002               	goto	l290
  2312  00035C  D007               	goto	l278
  2313  00035E  D000               	goto	l290
  2314  000360                     l290:
  2315  000360  B0C7               	btfsc	4039,0,c	;volatile
  2316  000362  D7FE               	goto	l290
  2317  000364  EC62  F003         	call	_IdleI2C	;wreg free
  2318  000368  50C5               	movf	4037,w,c	;volatile
  2319                           
  2320                           ;	Return value of _WriteI2C is never used
  2321                           
  2322                           ;	Return value of _WriteI2C is never used
  2323  00036A  D000               	goto	l278
  2324  00036C                     l278:
  2325  00036C  0012               	return		;funcret
  2326  00036E                     __end_of_WriteI2C:
  2327                           	opt stack 0
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           postinc0	equ	0xFEE
  2333                           wreg	equ	0xFE8
  2334                           postdec1	equ	0xFE5
  2335                           fsr1l	equ	0xFE1
  2336                           indf2	equ	0xFDF
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _IdleI2C *****************
  2342 ;; Defined at:
  2343 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\i2c\i2c_idle.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;		None               void
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:        1 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    2
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_Accel_WriteRegister
  2368 ;;		_Accel_ReadRegisters
  2369 ;;		_WriteI2C
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text21
  2374  0006C4                     __ptext21:
  2375                           	opt stack 0
  2376  0006C4                     _IdleI2C:
  2377                           	opt stack 25
  2378                           
  2379                           ;incstack = 0
  2380  0006C4  D000               	goto	l1582
  2381  0006C6                     l1582:
  2382  0006C6  CFC5 F020          	movff	4037,??_IdleI2C	;volatile
  2383  0006CA  0E1F               	movlw	31
  2384  0006CC  1620               	andwf	??_IdleI2C,f,c
  2385  0006CE  B4D8               	btfsc	status,2,c
  2386  0006D0  B4C7               	btfsc	4039,2,c	;volatile
  2387  0006D2  D7F9               	goto	l1582
  2388  0006D4  0012               	return		;funcret
  2389  0006D6                     __end_of_IdleI2C:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           postdec1	equ	0xFE5
  2398                           fsr1l	equ	0xFE1
  2399                           indf2	equ	0xFDF
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function _System_LowPriorityInterrupt *****************
  2405 ;; Defined at:
  2406 ;;		line 8 in file "system.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;		None               void
  2413 ;; Registers used:
  2414 ;;		None
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2422 ;;      Temps:         17       0       0       0       0       0       0       0       0
  2423 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2424 ;;Total ram usage:       17 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    1
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		Interrupt level 1
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	intcodelo
  2435  000018                     __pintcodelo:
  2436                           	opt stack 0
  2437  000018                     _System_LowPriorityInterrupt:
  2438                           	opt stack 23
  2439                           
  2440                           ;incstack = 0
  2441  000018  CFD8 F001          	movff	status,??_System_LowPriorityInterrupt
  2442  00001C  CFE8 F002          	movff	wreg,??_System_LowPriorityInterrupt+1
  2443  000020  CFE0 F003          	movff	bsr,??_System_LowPriorityInterrupt+2
  2444  000024  CFFA F004          	movff	pclath,??_System_LowPriorityInterrupt+3
  2445  000028  CFFB F005          	movff	pclatu,??_System_LowPriorityInterrupt+4
  2446  00002C  CFE9 F006          	movff	fsr0l,??_System_LowPriorityInterrupt+5
  2447  000030  CFEA F007          	movff	fsr0h,??_System_LowPriorityInterrupt+6
  2448  000034  CFE1 F008          	movff	fsr1l,??_System_LowPriorityInterrupt+7
  2449  000038  CFE2 F009          	movff	fsr1h,??_System_LowPriorityInterrupt+8
  2450  00003C  CFD9 F00A          	movff	fsr2l,??_System_LowPriorityInterrupt+9
  2451  000040  CFDA F00B          	movff	fsr2h,??_System_LowPriorityInterrupt+10
  2452  000044  CFF3 F00C          	movff	prodl,??_System_LowPriorityInterrupt+11
  2453  000048  CFF4 F00D          	movff	prodh,??_System_LowPriorityInterrupt+12
  2454  00004C  CFF6 F00E          	movff	tblptrl,??_System_LowPriorityInterrupt+13
  2455  000050  CFF7 F00F          	movff	tblptrh,??_System_LowPriorityInterrupt+14
  2456  000054  CFF8 F010          	movff	tblptru,??_System_LowPriorityInterrupt+15
  2457  000058  CFF5 F011          	movff	tablat,??_System_LowPriorityInterrupt+16
  2458  00005C  C011  FFF5         	movff	??_System_LowPriorityInterrupt+16,tablat
  2459  000060  C010  FFF8         	movff	??_System_LowPriorityInterrupt+15,tblptru
  2460  000064  C00F  FFF7         	movff	??_System_LowPriorityInterrupt+14,tblptrh
  2461  000068  C00E  FFF6         	movff	??_System_LowPriorityInterrupt+13,tblptrl
  2462  00006C  C00D  FFF4         	movff	??_System_LowPriorityInterrupt+12,prodh
  2463  000070  C00C  FFF3         	movff	??_System_LowPriorityInterrupt+11,prodl
  2464  000074  C00B  FFDA         	movff	??_System_LowPriorityInterrupt+10,fsr2h
  2465  000078  C00A  FFD9         	movff	??_System_LowPriorityInterrupt+9,fsr2l
  2466  00007C  C009  FFE2         	movff	??_System_LowPriorityInterrupt+8,fsr1h
  2467  000080  C008  FFE1         	movff	??_System_LowPriorityInterrupt+7,fsr1l
  2468  000084  C007  FFEA         	movff	??_System_LowPriorityInterrupt+6,fsr0h
  2469  000088  C006  FFE9         	movff	??_System_LowPriorityInterrupt+5,fsr0l
  2470  00008C  C005  FFFB         	movff	??_System_LowPriorityInterrupt+4,pclatu
  2471  000090  C004  FFFA         	movff	??_System_LowPriorityInterrupt+3,pclath
  2472  000094  C003  FFE0         	movff	??_System_LowPriorityInterrupt+2,bsr
  2473  000098  C002  FFE8         	movff	??_System_LowPriorityInterrupt+1,wreg
  2474  00009C  C001  FFD8         	movff	??_System_LowPriorityInterrupt,status
  2475  0000A0  0010               	retfie	
  2476  0000A2                     __end_of_System_LowPriorityInterrupt:
  2477                           	opt stack 0
  2478                           pclatu	equ	0xFFB
  2479                           pclath	equ	0xFFA
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           prodh	equ	0xFF4
  2485                           prodl	equ	0xFF3
  2486                           postinc0	equ	0xFEE
  2487                           fsr0h	equ	0xFEA
  2488                           fsr0l	equ	0xFE9
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           bsr	equ	0xFE0
  2494                           indf2	equ	0xFDF
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _System_HighPriorityInterrupt *****************
  2500 ;; Defined at:
  2501 ;;		line 3 in file "system.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		None
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2517 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2518 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2519 ;;Total ram usage:       14 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		Interrupt level 2
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	intcode
  2529  000008                     __pintcode:
  2530                           	opt stack 0
  2531  000008                     _System_HighPriorityInterrupt:
  2532                           	opt stack 23
  2533                           
  2534                           ;incstack = 0
  2535  000008  CFFA F012          	movff	pclath,??_System_HighPriorityInterrupt
  2536  00000C  CFFB F013          	movff	pclatu,??_System_HighPriorityInterrupt+1
  2537  000010  CFE9 F014          	movff	fsr0l,??_System_HighPriorityInterrupt+2
  2538  000014  ED29  F001         	call	int_func,f	;refresh shadow registers
  2539                           pclatu	equ	0xFFB
  2540                           pclath	equ	0xFFA
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           prodh	equ	0xFF4
  2546                           prodl	equ	0xFF3
  2547                           postinc0	equ	0xFEE
  2548                           fsr0h	equ	0xFEA
  2549                           fsr0l	equ	0xFE9
  2550                           wreg	equ	0xFE8
  2551                           postdec1	equ	0xFE5
  2552                           fsr1h	equ	0xFE2
  2553                           fsr1l	equ	0xFE1
  2554                           bsr	equ	0xFE0
  2555                           indf2	equ	0xFDF
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560                           	psect	intcode_body
  2561  000252                     __pintcode_body:
  2562                           	opt stack 23
  2563  000252                     int_func:
  2564                           	opt stack 23
  2565  000252  0006               	pop		; remove dummy address from shadow register refresh
  2566  000254  CFEA F015          	movff	fsr0h,??_System_HighPriorityInterrupt+3
  2567  000258  CFE1 F016          	movff	fsr1l,??_System_HighPriorityInterrupt+4
  2568  00025C  CFE2 F017          	movff	fsr1h,??_System_HighPriorityInterrupt+5
  2569  000260  CFD9 F018          	movff	fsr2l,??_System_HighPriorityInterrupt+6
  2570  000264  CFDA F019          	movff	fsr2h,??_System_HighPriorityInterrupt+7
  2571  000268  CFF3 F01A          	movff	prodl,??_System_HighPriorityInterrupt+8
  2572  00026C  CFF4 F01B          	movff	prodh,??_System_HighPriorityInterrupt+9
  2573  000270  CFF6 F01C          	movff	tblptrl,??_System_HighPriorityInterrupt+10
  2574  000274  CFF7 F01D          	movff	tblptrh,??_System_HighPriorityInterrupt+11
  2575  000278  CFF8 F01E          	movff	tblptru,??_System_HighPriorityInterrupt+12
  2576  00027C  CFF5 F01F          	movff	tablat,??_System_HighPriorityInterrupt+13
  2577  000280  C01F  FFF5         	movff	??_System_HighPriorityInterrupt+13,tablat
  2578  000284  C01E  FFF8         	movff	??_System_HighPriorityInterrupt+12,tblptru
  2579  000288  C01D  FFF7         	movff	??_System_HighPriorityInterrupt+11,tblptrh
  2580  00028C  C01C  FFF6         	movff	??_System_HighPriorityInterrupt+10,tblptrl
  2581  000290  C01B  FFF4         	movff	??_System_HighPriorityInterrupt+9,prodh
  2582  000294  C01A  FFF3         	movff	??_System_HighPriorityInterrupt+8,prodl
  2583  000298  C019  FFDA         	movff	??_System_HighPriorityInterrupt+7,fsr2h
  2584  00029C  C018  FFD9         	movff	??_System_HighPriorityInterrupt+6,fsr2l
  2585  0002A0  C017  FFE2         	movff	??_System_HighPriorityInterrupt+5,fsr1h
  2586  0002A4  C016  FFE1         	movff	??_System_HighPriorityInterrupt+4,fsr1l
  2587  0002A8  C015  FFEA         	movff	??_System_HighPriorityInterrupt+3,fsr0h
  2588  0002AC  C014  FFE9         	movff	??_System_HighPriorityInterrupt+2,fsr0l
  2589  0002B0  C013  FFFB         	movff	??_System_HighPriorityInterrupt+1,pclatu
  2590  0002B4  C012  FFFA         	movff	??_System_HighPriorityInterrupt,pclath
  2591  0002B8  0011               	retfie		f
  2592  0002BA                     __end_of_System_HighPriorityInterrupt:
  2593                           	opt stack 0
  2594  0000                     pclatu	equ	0xFFB
  2595                           pclath	equ	0xFFA
  2596                           tblptru	equ	0xFF8
  2597                           tblptrh	equ	0xFF7
  2598                           tblptrl	equ	0xFF6
  2599                           tablat	equ	0xFF5
  2600                           prodh	equ	0xFF4
  2601                           prodl	equ	0xFF3
  2602                           postinc0	equ	0xFEE
  2603                           fsr0h	equ	0xFEA
  2604                           fsr0l	equ	0xFE9
  2605                           wreg	equ	0xFE8
  2606                           postdec1	equ	0xFE5
  2607                           fsr1h	equ	0xFE2
  2608                           fsr1l	equ	0xFE1
  2609                           bsr	equ	0xFE0
  2610                           indf2	equ	0xFDF
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           pclatu	equ	0xFFB
  2615                           pclath	equ	0xFFA
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           prodh	equ	0xFF4
  2621                           prodl	equ	0xFF3
  2622                           postinc0	equ	0xFEE
  2623                           fsr0h	equ	0xFEA
  2624                           fsr0l	equ	0xFE9
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1h	equ	0xFE2
  2628                           fsr1l	equ	0xFE1
  2629                           bsr	equ	0xFE0
  2630                           indf2	equ	0xFDF
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635                           	psect	rparam
  2636  0000                     pclatu	equ	0xFFB
  2637                           pclath	equ	0xFFA
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           postinc0	equ	0xFEE
  2645                           fsr0h	equ	0xFEA
  2646                           fsr0l	equ	0xFE9
  2647                           wreg	equ	0xFE8
  2648                           postdec1	equ	0xFE5
  2649                           fsr1h	equ	0xFE2
  2650                           fsr1l	equ	0xFE1
  2651                           bsr	equ	0xFE0
  2652                           indf2	equ	0xFDF
  2653                           fsr2h	equ	0xFDA
  2654                           fsr2l	equ	0xFD9
  2655                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        49
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      64
    BANK0           160     39      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    getsI2C@rdptr	PTR unsigned char  size(2) Largest target is 6
		 -> Accel_ReadRegister@out(COMRAM[1]), Accel_Get@raw(COMRAM[6]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 28
		 -> Accel_Init@out(BANK0[20]), init(BANK0[28]), 

    Accel_ReadRegisters@out	PTR unsigned char  size(2) Largest target is 6
		 -> Accel_ReadRegister@out(COMRAM[1]), Accel_Get@raw(COMRAM[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    _System_Init->_OpenUSART
    _Accel_Init->_Accel_Active
    _Accel_Init->_Accel_StandBy
    _putsUSART->_WriteUSART
    _itoa->_utoa
    _utoa->___lwdiv
    _Accel_StandBy->_Accel_ReadRegister
    _Accel_Active->_Accel_ReadRegister
    _Accel_WriteRegister->_WriteI2C
    _Accel_ReadRegister->_Accel_ReadRegisters
    _Accel_ReadRegisters->_getsI2C
    _WriteI2C->_IdleI2C

Critical Paths under _System_HighPriorityInterrupt in COMRAM

    None.

Critical Paths under _System_LowPriorityInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Accel_Init
    _Accel_Init->_itoa
    _itoa->_utoa

Critical Paths under _System_HighPriorityInterrupt in BANK0

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _System_HighPriorityInterrupt in BANK1

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _System_HighPriorityInterrupt in BANK2

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _System_HighPriorityInterrupt in BANK3

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _System_HighPriorityInterrupt in BANK4

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _System_HighPriorityInterrupt in BANK5

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _System_HighPriorityInterrupt in BANK6

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _System_HighPriorityInterrupt in BANK7

    None.

Critical Paths under _System_LowPriorityInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6371
                                             41 COMRAM     1     1      0
                                             37 BANK0      2     2      0
                         _Accel_Init
                        _System_Init
 ---------------------------------------------------------------------------------
 (1) _System_Init                                          0     0      0     548
                           _CloseI2C
                            _OpenI2C
                          _OpenUSART
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     139
                                             31 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CloseI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Accel_Init                                          23    23      0    5755
                                             14 BANK0     23    23      0
                       _Accel_Active
                 _Accel_ReadRegister
                      _Accel_StandBy
                _Accel_WriteRegister
                               _itoa
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     247
                                             32 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2070
                                              6 BANK0      8     2      6
                 _Accel_ReadRegister (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                             38 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Accel_StandBy                                        1     1      0    1111
                                             40 COMRAM     1     1      0
                 _Accel_ReadRegister
                _Accel_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _Accel_Active                                         1     1      0    1111
                                             40 COMRAM     1     1      0
                 _Accel_ReadRegister
                _Accel_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _Accel_WriteRegister                                  2     1      1     324
                                             33 COMRAM     2     1      1
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _Accel_ReadRegister                                   2     2      0     753
                                             38 COMRAM     2     2      0
                _Accel_ReadRegisters
 ---------------------------------------------------------------------------------
 (4) _Accel_ReadRegisters                                  5     1      4     651
                                             34 COMRAM     4     0      4
                            _IdleI2C
                           _WriteI2C
                            _getsI2C
 ---------------------------------------------------------------------------------
 (5) _getsI2C                                              3     0      3     250
                                             31 COMRAM     3     0      3
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (6) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      31
                                             32 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _System_LowPriorityInterrupt                         17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _System_HighPriorityInterrupt                        14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Accel_Init
     _Accel_Active
       _Accel_ReadRegister
         _Accel_ReadRegisters
           _IdleI2C
           _WriteI2C
             _IdleI2C
           _getsI2C
             _ReadI2C
       _Accel_WriteRegister
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _Accel_ReadRegister
       _Accel_ReadRegisters
         _IdleI2C
         _WriteI2C
           _IdleI2C
         _getsI2C
           _ReadI2C
     _Accel_StandBy
       _Accel_ReadRegister
         _Accel_ReadRegisters
           _IdleI2C
           _WriteI2C
             _IdleI2C
           _getsI2C
             _ReadI2C
       _Accel_WriteRegister
         _IdleI2C
         _WriteI2C
           _IdleI2C
     _Accel_WriteRegister
       _IdleI2C
       _WriteI2C
         _IdleI2C
     _itoa
       _Accel_ReadRegister (ARG)
         _Accel_ReadRegisters
           _IdleI2C
           _WriteI2C
             _IdleI2C
           _getsI2C
             _ReadI2C
       _utoa (ARG)
         ___lwdiv
         ___lwmod
     _putsUSART
       _WriteUSART
   _System_Init
     _CloseI2C
     _OpenI2C
     _OpenUSART
     _baudUSART

 _System_LowPriorityInterrupt (ROOT)

 _System_HighPriorityInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     27      43       5       41.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      40       1       67.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      83      20        0.0%
DATA                 0      0      83       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Dec 03 00:27:20 2018

                        _Accel_StandBy 0682                            _SSPSTATbits 000FC7  
                                   l95 054C                                     l98 0554  
                                   bsr 000FE0                                    l101 057A  
                                  l110 060E                                    l104 0582  
                                  l113 0418                                    l210 0384  
                                  l122 044C                                    l116 0420  
                                  l125 0454                                    l214 03C0  
                                  l119 0444                                    l128 045C  
                                  l160 020E                                    l219 03B0  
                                  l260 0630                                    l164 0228  
                                  l165 022A                                    l166 0234  
                                  l167 0236                                    l256 0624  
                                  l281 033C                                    l257 0628  
                                  l177 05C8                                    l169 0250  
                                  l290 0360                                    l278 036C  
                                  l735 012E                                    l737 015A  
                                  l729 04AC                                    l829 030C  
                                  l839 04F0                                    wreg 000FE8  
                Accel_ReadRegister@reg 0027                  Accel_ReadRegister@out 0028  
                ??_Accel_WriteRegister 0023                                   l1602 0324  
                                 l1614 0348                                   l1634 0390  
                                 l1642 03B8                                   l1714 067C  
                                 l1628 0370                                   l1660 02D0  
                                 l1582 06C6                                   l1638 03A4  
                                 l1662 02DA                                   l1718 00B0  
                                 l1672 0300                                   l1664 02E2  
                                 l1680 04BC                                   l1728 00F0  
                                 l1824 048E                                   l1760 0206  
                                 l1752 01F4                                   l1682 04C6  
                                 l1684 04CE                                   l1772 0220  
                                 l1764 0212                                   l1756 01FE  
                                 l1688 04E4                                   l1858 015E  
                                 l1890 03F6                                   l1882 03D0  
                                 l1868 01C8                                   l1886 03DC  
                                 _PIE1 000F9D                                   u1877 03FC  
                                 _main 03C2                                   _init 0087  
                                 _itoa 0462                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 _utoa 00A6                    baudUSART@baudconfig 0020  
                                 pclat 000FFA                                   prodh 000FF4  
                                 prodl 000FF3                                   start 00A2  
                      __end_of_IdleI2C 06D6                   __size_of_System_Init 003E  
                         ___param_bank 000010                        __end_of_ReadI2C 0632  
                       ?_Accel_StandBy 0001                        __end_of_OpenI2C 0650  
               Accel_ReadRegisters@reg 0001                 Accel_ReadRegisters@out 0023  
                                ?_main 0001                                  ?_itoa 0066  
                                ?_utoa 0060                        __end_of___lwdiv 0316  
                      __end_of___lwmod 04FA                                  _RCSTA 000FAB  
                                _SPBRG 000FAF                                  _TRISC 000F94  
                                _TRISD 000F95                                  _TXREG 000FAD  
                                _TXSTA 000FAC                        __end_of_getsI2C 03C2  
                                _hello 002B                                  main@i 0085  
                                tablat 000FF5                                  utoa@c 0029  
                                utoa@v 0027                                  status 000FD8  
                     __end_of_CloseI2C 06E2                         WriteUSART@data 0020  
                          ?_Accel_Init 0001                        __initialization 04FA  
                         __end_of_main 0414                           __end_of_itoa 04AE  
                         __end_of_utoa 015C                                 ??_main 002A  
                               ??_itoa 002A                                 ??_utoa 0027  
                        __activetblptr 000000                       __end_of_WriteI2C 036E  
                          OpenI2C@slew 0020                              ??_IdleI2C 0020  
                               _SPBRGH 000FB0                                 _SSPADD 000FC8  
                               _SSPBUF 000FC9                              ??_ReadI2C 0020  
                            ??_OpenI2C 0021                        ??_Accel_StandBy 0029  
                   __size_of_OpenUSART 0070              Accel_ReadRegisters@length 0025  
                            ??___lwdiv 0024                              ??___lwmod 0024  
                            ??_getsI2C 0023                                 itoa@cp 006C  
                         __pdataCOMRAM 002B                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
       ??_System_HighPriorityInterrupt 0012                    __size_of_Accel_Init 0086  
                        Accel_Active@c 0029                             __accesstop 0060  
              __end_of__initialization 053C                          ___rparam_used 000001  
                        Accel_Init@fsr 0084                     __size_of_baudUSART 0008  
                        Accel_Init@out 0070                             _WriteUSART 066C  
                       __pcstackCOMRAM 0001                           __pidataBANK0 0650  
          __end_of_Accel_ReadRegisters 0462                              ?_CloseI2C 0001  
                    __end_of_OpenUSART 0252            __size_of_Accel_ReadRegister 0022  
                        putsUSART@data 0021                                _BAUDCON 000FB8  
                            ?_WriteI2C 0001            __end_of_Accel_WriteRegister 0588  
                    __end_of_baudUSART 06DE                             ??_CloseI2C 0020  
                   __size_of_putsUSART 0028                                _SSPCON1 000FC6  
                              _SSPCON2 000FC5                                _SSPSTAT 000FC7  
                              _IdleI2C 06C4                          ??_System_Init 0023  
                              _ReadI2C 0610                                _OpenI2C 0632  
                              __Hparam 0000                                __Lparam 0000  
                         ??_Accel_Init 006E                            ?_WriteUSART 0001  
                              ___lwdiv 02BA                                ___lwmod 04AE  
                              __pcinit 04FA                             ??_WriteI2C 0021  
                              __ramtop 0800                                _getsI2C 036E  
                              __ptext0 03C2                                __ptext1 0588  
                              __ptext2 06D6                                __ptext3 01E2  
                              __ptext4 0632                                __ptext5 06DE  
                              __ptext6 015C                                __ptext7 05C6  
                              __ptext8 066C                                __ptext9 0462  
               Accel_WriteRegister@reg 0023                     __end_of_Accel_Init 01E2  
                       __pintcode_body 0252                   end_of_initialization 053C  
                              itoa@buf 0066                                itoa@val 0068  
                              int_func 0252                              _RCSTAbits 000FAB  
         ?_System_LowPriorityInterrupt 0001                                postdec1 000FE5  
                              postinc0 000FEE                      __end_of_putsUSART 05EE  
                  __end_of_System_Init 05C6                                utoa@buf 0060  
                              utoa@val 0062                              _TRISBbits 000F93  
                            _TRISCbits 000F94                    __size_of_WriteUSART 0016  
                            _TXSTAbits 000FAC                          ?_Accel_Active 0001  
                __end_of_Accel_StandBy 0698                          __pidataCOMRAM 06AE  
                  start_initialization 04FA                         Accel_StandBy@c 0029  
                     WriteI2C@data_out 0021                      __size_of_CloseI2C 0004  
                            _OpenUSART 01E2                         ??_Accel_Active 0029  
                          _System_Init 0588   __end_of_System_HighPriorityInterrupt 02BA  
__size_of_System_HighPriorityInterrupt 02B2           _System_HighPriorityInterrupt 0008  
                          __pdataBANK0 0087                      __size_of_WriteI2C 0058  
         __size_of_Accel_ReadRegisters 004E                            __pbssCOMRAM 0040  
                        __pcstackBANK0 0060   __size_of_System_LowPriorityInterrupt 008A  
           __end_of_Accel_ReadRegister 0610                              _baudUSART 06D6  
                             ?_IdleI2C 0001                             ?_OpenUSART 0020  
                             ?_ReadI2C 0001                               ?_OpenI2C 0020  
                     ___lwdiv@dividend 0020                           ??_WriteUSART 0020  
                            __pintcode 0008                               ?___lwdiv 0020  
                             ?___lwmod 0020          ?_System_HighPriorityInterrupt 0001  
                          __pintcodelo 0018                               ?_getsI2C 0020  
                     ___lwdiv@quotient 0025                     __end_of_WriteUSART 0682  
                           ?_baudUSART 0001           __size_of_Accel_WriteRegister 0046  
                             _LATDbits 000F8C                               _PIE1bits 000F9D  
                             _PIR1bits 000F9E                               _PIR2bits 000FA1  
                            _putsUSART 05C6                   __end_of_Accel_Active 06AE  
                             _CloseI2C 06DE                              copy_data0 0510  
                            copy_data1 0530                       OpenI2C@sync_mode 0021  
                          ??_OpenUSART 0022                       __size_of_IdleI2C 0012  
                      OpenUSART@config 0022                       __size_of_ReadI2C 0022  
                             __Hrparam 0000                       __size_of_OpenI2C 001E  
                             __Lrparam 0000                          getsI2C@length 0022  
                     __size_of___lwdiv 005C                       __size_of___lwmod 004C  
                             _WriteI2C 0316                             ?_putsUSART 0021  
                     __size_of_getsI2C 0054                        ___lwdiv@divisor 0022  
                      ___lwdiv@counter 0024                               __ptext10 00A6  
                             __ptext11 04AE                               __ptext20 0316  
                             __ptext12 02BA                               __ptext21 06C4  
                             __ptext13 0682                               __ptext14 0698  
                             __ptext15 0542                               __ptext16 05EE  
                             __ptext17 0414                               __ptext18 036E  
                             __ptext19 0610                            ??_baudUSART 0020  
              Accel_WriteRegister@data 0022                          __size_of_main 0052  
                        __size_of_itoa 004C                          __size_of_utoa 00B6  
                         ?_System_Init 0001                    _Accel_ReadRegisters 0414  
                 ?_Accel_ReadRegisters 0023                         OpenUSART@spbrg 0020  
                             itoa@base 006A                           getsI2C@rdptr 0020  
               __size_of_Accel_StandBy 0016                               intlevel1 0000  
                             intlevel2 0000                       ___lwmod@dividend 0020  
                   _Accel_ReadRegister 05EE    __end_of_System_LowPriorityInterrupt 00A2  
          _System_LowPriorityInterrupt 0018                  __size_of_Accel_Active 0016  
                  _Accel_WriteRegister 0542                    ?_Accel_ReadRegister 0001  
                          ??_putsUSART 0023                               utoa@base 0064  
        ??_System_LowPriorityInterrupt 0001                  ??_Accel_ReadRegisters 0027  
                      ___lwmod@divisor 0022                        ___lwmod@counter 0024  
                          _SSPCON1bits 000FC6                            _SSPCON2bits 000FC5  
                 ?_Accel_WriteRegister 0022                   ??_Accel_ReadRegister 0027  
                         _USART_Status 0040                           _Accel_Active 0698  
                           _Accel_Init 015C  
